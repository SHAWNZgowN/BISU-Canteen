package canteenreservation;

import java.awt.Component;
import java.awt.Dimension;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.image.BufferedImage;
import static java.awt.image.ImageObserver.HEIGHT;
import java.io.ByteArrayOutputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.Icon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;


public class ClientForm extends javax.swing.JFrame {

    /**
     * Creates new form ClientForm
     */
    Connection con = null;
    Statement st = null;
    PreparedStatement pst = null;
    ResultSet rs;
    DefaultTableModel food_model;
    DefaultTableModel drinks_model;
    DefaultTableModel snacks_model;
    DefaultTableModel cart_model;
    DefaultTableModel reserve_model;
    String nameSelectedTableIndex;
    String idselectedindex;
    String getUSerID;
    String getCate;
     String getQuant;
    DefaultTableModel transaction_model;
    DefaultTableModel credits_model;
    
    public ClientForm(String userName) {
        initComponents();
        setExtendedState(ClientForm.MAXIMIZED_BOTH);
        con = Dbconnect.getConnected();
        FoodTableImgRenderer();
        Food_Table_View();
        Drinks_Table_View();
        DrinksTableImgRenderer();
        Snacks_Table_View();
        SnacksTableImgRenderer();
        CartTableImgRenderer();
        cart_table_view();
        RsrvTblImgRendr();
        reservation_view();
        fetchUserIDAndUsername(con,userName, userIDlabel, NameLabel);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
     public static void fetchUserIDAndUsername(Connection connection, String username, JLabel userIDLabel, JLabel nameLabel) {
    String query = "SELECT id, username FROM account WHERE username = ?";
    
    try (PreparedStatement pst = connection.prepareStatement(query)) {
        pst.setString(1, username);
        ResultSet rs = pst.executeQuery();
        
        if (rs.next()) {
            int userID = rs.getInt("id");
            String retrievedUsername = rs.getString("username");
            
            userIDLabel.setText(Integer.toString(userID));
           
            nameLabel.setText(retrievedUsername);
        } else {
          
            userIDLabel.setText("User not found");
            nameLabel.setText("User not found");
        }
    } catch (SQLException e) {

        e.printStackTrace();
        userIDLabel.setText("Error fetching user ID");
        nameLabel.setText("Error fetching username");
    }
}

    
    private  void reservation_view(){
        reserve_model = (DefaultTableModel)reserveTbl.getModel();
        reserve_model.setRowCount(0);
        try{
            byte[] imageBytes = null;
            String query = "SELECT * FROM reservation";
            pst = con.prepareStatement(query);
            rs = pst.executeQuery();

        while (rs.next()) {
            int getId = rs.getInt("id");
            imageBytes = rs.getBytes("Image");
            String getfdname = rs.getString("Name");
            int prc = rs.getInt("Price");
            int getquant = rs.getInt("Quantity");
            int getTotal = rs.getInt("total");
            if (imageBytes != null) {
                ImageIcon imageIcon = new ImageIcon(imageBytes);

                
                reserve_model.addRow(new Object[]{getId, imageIcon, getfdname, prc, getquant, getTotal});
            } 
        }
        }catch(Exception e){
            e.printStackTrace();
        }
    }
    public final void RsrvTblImgRendr() {
       DefaultTableCellRenderer renderer = new DefaultTableCellRenderer() {
           @Override
           public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
               if(value instanceof ImageIcon) {
                   JLabel label = new JLabel((ImageIcon) value);
                   label.setHorizontalAlignment(JLabel.CENTER);
                   return label;
               }
               return super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
           }
       };

       reserveTbl.getColumnModel().getColumn(1).setCellRenderer(renderer); // Assuming the image column is at index 2
       reserveTbl.setRowHeight(150);
   }
    public final void FoodTableImgRenderer() {
       DefaultTableCellRenderer renderer = new DefaultTableCellRenderer() {
           @Override
           public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
               if(value instanceof ImageIcon) {
                   JLabel label = new JLabel((ImageIcon) value);
                   label.setHorizontalAlignment(JLabel.CENTER);
                   return label;
               }
               return super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
           }
       };

       food_table.getColumnModel().getColumn(2).setCellRenderer(renderer); // Assuming the image column is at index 2
       food_table.setRowHeight(150);
   }
    
    public final void Food_Table_View() {
         food_model = (DefaultTableModel) food_table.getModel();
         food_model.setRowCount(0);
         int totalSum = 0;
       try {
          byte[] imageBytes = null;
        String query = "SELECT * FROM food";
        pst = con.prepareStatement(query);
        rs = pst.executeQuery();

        while (rs.next()) {
            String getfdname = rs.getString("Name");
            int getquant = rs.getInt("Quantity");
            imageBytes = rs.getBytes("Image");
            int prc = rs.getInt("Price");
            if (imageBytes != null) {
                ImageIcon imageIcon = new ImageIcon(imageBytes);

                
                food_model.addRow(new Object[]{getfdname, getquant, imageIcon, prc});
            } 
        }
       
    } catch (SQLException e) {
         JOptionPane.showMessageDialog(rootPane, e, null, HEIGHT);
    }
}
    public final void Drinks_Table_View() {
         drinks_model = (DefaultTableModel) drinks_table.getModel();
         drinks_model.setRowCount(0);
         int totalSum = 0;
       try {
          byte[] imageBytes = null;
        String query = "SELECT * FROM drinks";
        pst = con.prepareStatement(query);
        rs = pst.executeQuery();

        while (rs.next()) {
            String getfdname = rs.getString("Name");
            int getquant = rs.getInt("Quantity");
            imageBytes = rs.getBytes("Image");
            int prc = rs.getInt("Price");
            if (imageBytes != null) {
                ImageIcon imageIcon = new ImageIcon(imageBytes);

                
                drinks_model.addRow(new Object[]{getfdname, getquant, imageIcon, prc});
            } 
        }
       
    } catch (SQLException e) {
         JOptionPane.showMessageDialog(rootPane, e, null, HEIGHT);
    }
}
    public final void DrinksTableImgRenderer() {
       DefaultTableCellRenderer renderer = new DefaultTableCellRenderer() {
           @Override
           public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
               if(value instanceof ImageIcon) {
                   JLabel label = new JLabel((ImageIcon) value);
                   label.setHorizontalAlignment(JLabel.CENTER);
                   return label;
               }
               return super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
           }
       };

       drinks_table.getColumnModel().getColumn(2).setCellRenderer(renderer); // Assuming the image column is at index 2
       drinks_table.setRowHeight(150);
   }
    
    public final void Snacks_Table_View() {
         snacks_model = (DefaultTableModel) snacks_table.getModel();
         snacks_model.setRowCount(0);
         int totalSum = 0;
       try {
          byte[] imageBytes = null;
        String query = "SELECT * FROM snack";
        pst = con.prepareStatement(query);
        rs = pst.executeQuery();

        while (rs.next()) {
            String getfdname = rs.getString("Name");
            int getquant = rs.getInt("Quantity");
            imageBytes = rs.getBytes("Image");
            int prc = rs.getInt("Price");
            if (imageBytes != null) {
                ImageIcon imageIcon = new ImageIcon(imageBytes);

                
                snacks_model.addRow(new Object[]{getfdname, getquant, imageIcon, prc});
            } 
        }
       
    } catch (SQLException e) {
         JOptionPane.showMessageDialog(rootPane, e, null, HEIGHT);
    }
}
    public final void SnacksTableImgRenderer() {
       DefaultTableCellRenderer renderer = new DefaultTableCellRenderer() {
           @Override
           public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
               if(value instanceof ImageIcon) {
                   JLabel label = new JLabel((ImageIcon) value);
                   label.setHorizontalAlignment(JLabel.CENTER);
                   return label;
               }
               return super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
           }
       };

       snacks_table.getColumnModel().getColumn(2).setCellRenderer(renderer); // Assuming the image column is at index 2
       snacks_table.setRowHeight(150);
   }
    
    public final void cart_table_view(){
        cart_model = (DefaultTableModel) cart_table.getModel();
        cart_model.setRowCount(0);
        
        try {
          byte[] imageBytes = null;
        String query = "SELECT * FROM cart";
        pst = con.prepareStatement(query);
        rs = pst.executeQuery();

        while (rs.next()) {
            int getID = rs.getInt("id");
            imageBytes = rs.getBytes("image");
            String getName = rs.getString("name");
            String cate = rs.getString("Category");
            int getQuant = rs.getInt("quantity");
            int prc = rs.getInt("price");
            int total = rs.getInt("total");
            if (imageBytes != null) {
                ImageIcon imageIcon = new ImageIcon(imageBytes);

                
                cart_model.addRow(new Object[]{getID, imageIcon, getName, cate, prc, getQuant, total});
            } 
        }
       
    } catch (SQLException e) {
         JOptionPane.showMessageDialog(rootPane, e, null, HEIGHT);
    }
    }
    
    public final void CartTableImgRenderer() {
       DefaultTableCellRenderer renderer = new DefaultTableCellRenderer() {
           @Override
           public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
               if(value instanceof ImageIcon) {
                   JLabel label = new JLabel((ImageIcon) value);
                   label.setHorizontalAlignment(JLabel.CENTER);
                   return label;
               }
               return super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
           }
       };

       cart_table.getColumnModel().getColumn(1).setCellRenderer(renderer); // Assuming the image column is at index 2
       cart_table.setRowHeight(150);
   }
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MainPanel = new javax.swing.JPanel();
        YellowBackground = new javax.swing.JPanel();
        YellowBG = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        Buttons = new javax.swing.JTabbedPane();
        One = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton36 = new javax.swing.JButton();
        reservationSection = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton35 = new javax.swing.JButton();
        jButton42 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton19 = new javax.swing.JButton();
        jButton20 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        jButton17 = new javax.swing.JButton();
        jButton34 = new javax.swing.JButton();
        jButton43 = new javax.swing.JButton();
        Pages = new javax.swing.JTabbedPane();
        Home_panel = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        userIDlabel = new javax.swing.JLabel();
        NameLabel = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel72 = new javax.swing.JLabel();
        jLabel74 = new javax.swing.JLabel();
        jButton41 = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        jLabel78 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        food_panel = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        food_table = new javax.swing.JTable();
        jPanel11 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        jPanel17 = new javax.swing.JPanel();
        food_img = new javax.swing.JLabel();
        jPanel18 = new javax.swing.JPanel();
        foodAddtoCartBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        spin = new javax.swing.JSpinner();
        food_price = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        food_name = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton24 = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jPanel35 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        total_label = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        drinksLabel3 = new javax.swing.JLabel();
        Drinks_panel = new javax.swing.JPanel();
        jPanel19 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        drinks_table = new javax.swing.JTable();
        jPanel20 = new javax.swing.JPanel();
        jPanel21 = new javax.swing.JPanel();
        jPanel22 = new javax.swing.JPanel();
        jPanel23 = new javax.swing.JPanel();
        drinks_img = new javax.swing.JLabel();
        jPanel24 = new javax.swing.JPanel();
        drinksAddToCartBtn = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        drinksLabel = new javax.swing.JLabel();
        drinks_quant = new javax.swing.JSpinner();
        jLabel10 = new javax.swing.JLabel();
        drinks_name = new javax.swing.JLabel();
        jButton25 = new javax.swing.JButton();
        drinks_price = new javax.swing.JLabel();
        jPanel36 = new javax.swing.JPanel();
        jLabel30 = new javax.swing.JLabel();
        drink_total = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        drinksLabel2 = new javax.swing.JLabel();
        snack_panel = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        snacks_table = new javax.swing.JTable();
        jPanel25 = new javax.swing.JPanel();
        jPanel26 = new javax.swing.JPanel();
        jPanel27 = new javax.swing.JPanel();
        jPanel28 = new javax.swing.JPanel();
        snack_img = new javax.swing.JLabel();
        jPanel29 = new javax.swing.JPanel();
        snacksAddToCartBtn = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        snacksLabel = new javax.swing.JLabel();
        snack_quant = new javax.swing.JSpinner();
        jLabel15 = new javax.swing.JLabel();
        snack_name = new javax.swing.JLabel();
        jButton26 = new javax.swing.JButton();
        snack_prc = new javax.swing.JLabel();
        jPanel57 = new javax.swing.JPanel();
        jLabel36 = new javax.swing.JLabel();
        snack_total = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        drinksLabel1 = new javax.swing.JLabel();
        cart_panel = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        cart_table = new javax.swing.JTable();
        jPanel34 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        cart_image = new javax.swing.JLabel();
        cart_quant = new javax.swing.JLabel();
        itemname = new javax.swing.JLabel();
        category = new javax.swing.JLabel();
        cart_price = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jPanel33 = new javax.swing.JPanel();
        cart_total = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        drinksLabel4 = new javax.swing.JLabel();
        Options = new javax.swing.JTabbedPane();
        jPanel10 = new javax.swing.JPanel();
        jButton27 = new javax.swing.JButton();
        jButton18 = new javax.swing.JButton();
        jPanel30 = new javax.swing.JPanel();
        jPanel31 = new javax.swing.JPanel();
        jButton29 = new javax.swing.JButton();
        jButton28 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        Transaction_Panel = new javax.swing.JPanel();
        jPanel32 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        transacTable = new javax.swing.JTable();
        jLabel47 = new javax.swing.JLabel();
        drinksLabel5 = new javax.swing.JLabel();
        Credits_panel = new javax.swing.JPanel();
        jPanel39 = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        creditsTable = new javax.swing.JTable();
        jLabel49 = new javax.swing.JLabel();
        jPanel40 = new javax.swing.JPanel();
        jPanel42 = new javax.swing.JPanel();
        jLabel37 = new javax.swing.JLabel();
        jButton31 = new javax.swing.JButton();
        jButton32 = new javax.swing.JButton();
        PaymentOptions2 = new javax.swing.JTabbedPane();
        jPanel41 = new javax.swing.JPanel();
        jPanel44 = new javax.swing.JPanel();
        jPanel46 = new javax.swing.JPanel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jButton33 = new javax.swing.JButton();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel53 = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        jLabel55 = new javax.swing.JLabel();
        jLabel56 = new javax.swing.JLabel();
        jPanel43 = new javax.swing.JPanel();
        jPanel47 = new javax.swing.JPanel();
        jPanel48 = new javax.swing.JPanel();
        jLabel57 = new javax.swing.JLabel();
        jLabel58 = new javax.swing.JLabel();
        jLabel59 = new javax.swing.JLabel();
        jLabel61 = new javax.swing.JLabel();
        jLabel62 = new javax.swing.JLabel();
        jLabel63 = new javax.swing.JLabel();
        jLabel64 = new javax.swing.JLabel();
        jLabel65 = new javax.swing.JLabel();
        jLabel66 = new javax.swing.JLabel();
        jLabel67 = new javax.swing.JLabel();
        jLabel68 = new javax.swing.JLabel();
        drinksLabel6 = new javax.swing.JLabel();
        Reservations_panel = new javax.swing.JPanel();
        jPanel45 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        reserveTbl = new javax.swing.JTable();
        jButton38 = new javax.swing.JButton();
        drinksLabel7 = new javax.swing.JLabel();
        jPanel52 = new javax.swing.JPanel();
        jPanel53 = new javax.swing.JPanel();
        jLabel70 = new javax.swing.JLabel();
        jLabel71 = new javax.swing.JLabel();
        rtotal = new javax.swing.JLabel();
        jLabel73 = new javax.swing.JLabel();
        rquant = new javax.swing.JLabel();
        jLabel75 = new javax.swing.JLabel();
        rname = new javax.swing.JLabel();
        jLabel77 = new javax.swing.JLabel();
        ritem = new javax.swing.JLabel();
        rprc = new javax.swing.JLabel();
        jButton37 = new javax.swing.JButton();
        jLabel79 = new javax.swing.JLabel();
        jLabel90 = new javax.swing.JLabel();
        jPanel49 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel37 = new javax.swing.JPanel();
        jPanel38 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        MainPanel.setBackground(new java.awt.Color(255, 255, 255));
        MainPanel.setPreferredSize(new java.awt.Dimension(1600, 900));
        MainPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        YellowBackground.setBackground(new java.awt.Color(102, 0, 0));
        YellowBackground.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        YellowBG.setBackground(new java.awt.Color(102, 0, 0));
        YellowBG.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ClientIcons/CS LOGO 2.png"))); // NOI18N
        YellowBG.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, -1, -1));

        YellowBackground.add(YellowBG, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 250, 170));

        One.setBackground(new java.awt.Color(255, 255, 255));
        One.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton2.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ClientIcons/3e2a5e9a77757994c830fd17997a985a-removebg-preview (1).png"))); // NOI18N
        jButton2.setText("Home");
        jButton2.setBorder(null);
        jButton2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton2.setIconTextGap(50);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        One.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 220, 50));

        jButton4.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ClientIcons/941fbec1059375921f4e74becfa57899-removebg-preview (1).png"))); // NOI18N
        jButton4.setText("Products                     >");
        jButton4.setBorder(null);
        jButton4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton4.setIconTextGap(45);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        One.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 220, 60));

        jButton3.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ClientIcons/0de0cd80d803e78f0ef499af6c0d61e7-removebg-preview (1).png"))); // NOI18N
        jButton3.setText("Cart");
        jButton3.setBorder(null);
        jButton3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton3.setIconTextGap(55);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        One.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 220, 60));

        jButton5.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ClientIcons/c9ec7ad69329e0fc3b7dbb51faba2ed9-removebg-preview (1).png"))); // NOI18N
        jButton5.setText("Transactions               >");
        jButton5.setBorder(null);
        jButton5.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton5.setIconTextGap(40);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        One.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, 220, 60));

        jButton36.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        jButton36.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ClientIcons/LOG OUT ICOn.png"))); // NOI18N
        jButton36.setText("Log out");
        jButton36.setBorder(null);
        jButton36.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton36.setIconTextGap(40);
        jButton36.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton36ActionPerformed(evt);
            }
        });
        One.add(jButton36, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 670, 220, 60));

        reservationSection.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        reservationSection.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Canteen Reservation Images/Reservation Icon.png"))); // NOI18N
        reservationSection.setText("Reservation");
        reservationSection.setBorder(null);
        reservationSection.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        reservationSection.setIconTextGap(40);
        reservationSection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reservationSectionActionPerformed(evt);
            }
        });
        One.add(reservationSection, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, 220, 60));

        Buttons.addTab("tab1", One);

        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton6.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ClientIcons/3e2a5e9a77757994c830fd17997a985a-removebg-preview (1).png"))); // NOI18N
        jButton6.setText("Home");
        jButton6.setBorder(null);
        jButton6.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton6.setIconTextGap(50);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 220, 50));

        jButton7.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ClientIcons/941fbec1059375921f4e74becfa57899-removebg-preview (1).png"))); // NOI18N
        jButton7.setText("Products                     ^");
        jButton7.setBorder(null);
        jButton7.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton7.setIconTextGap(45);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 220, 60));

        jButton13.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        jButton13.setText("Snacks");
        jButton13.setBorder(null);
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton13, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 190, 230, 30));

        jButton14.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        jButton14.setText("Foods");
        jButton14.setBorder(null);
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton14, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 130, 230, 30));

        jButton15.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        jButton15.setText("Drinks");
        jButton15.setBorder(null);
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton15, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 160, 230, 30));

        jButton8.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ClientIcons/0de0cd80d803e78f0ef499af6c0d61e7-removebg-preview (1).png"))); // NOI18N
        jButton8.setText("Cart");
        jButton8.setBorder(null);
        jButton8.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton8.setIconTextGap(55);
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, 220, 60));

        jButton9.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ClientIcons/c9ec7ad69329e0fc3b7dbb51faba2ed9-removebg-preview (1).png"))); // NOI18N
        jButton9.setText("Transactions               >");
        jButton9.setBorder(null);
        jButton9.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton9.setIconTextGap(40);
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 280, 220, 60));

        jButton35.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        jButton35.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Canteen Reservation Images/Reservation Icon.png"))); // NOI18N
        jButton35.setText("Reservation");
        jButton35.setBorder(null);
        jButton35.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton35.setIconTextGap(40);
        jButton35.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton35ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton35, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 340, 220, 60));

        jButton42.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        jButton42.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ClientIcons/LOG OUT ICOn.png"))); // NOI18N
        jButton42.setText("Log out");
        jButton42.setBorder(null);
        jButton42.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton42.setIconTextGap(40);
        jButton42.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton42ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton42, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 670, 220, 60));

        jPanel3.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 230, 730));

        Buttons.addTab("tab2", jPanel3);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton11.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        jButton11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ClientIcons/3e2a5e9a77757994c830fd17997a985a-removebg-preview (1).png"))); // NOI18N
        jButton11.setText("Home");
        jButton11.setBorder(null);
        jButton11.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton11.setIconTextGap(50);
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton11, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 220, 50));

        jButton12.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        jButton12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ClientIcons/941fbec1059375921f4e74becfa57899-removebg-preview (1).png"))); // NOI18N
        jButton12.setText("Products                     ^");
        jButton12.setBorder(null);
        jButton12.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton12.setIconTextGap(45);
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton12, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 220, 60));

        jButton19.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        jButton19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ClientIcons/0de0cd80d803e78f0ef499af6c0d61e7-removebg-preview (1).png"))); // NOI18N
        jButton19.setText("Cart");
        jButton19.setBorder(null);
        jButton19.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton19.setIconTextGap(55);
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton19, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 220, 60));

        jButton20.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        jButton20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ClientIcons/c9ec7ad69329e0fc3b7dbb51faba2ed9-removebg-preview (1).png"))); // NOI18N
        jButton20.setText("Transactions               >");
        jButton20.setBorder(null);
        jButton20.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton20.setIconTextGap(40);
        jButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton20ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton20, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, 220, 60));

        jButton16.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        jButton16.setText("Credits");
        jButton16.setBorder(null);
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton16, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 280, 190, 30));

        jButton17.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        jButton17.setText("Payment");
        jButton17.setBorder(null);
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton17, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, 190, 30));

        jButton34.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        jButton34.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Canteen Reservation Images/Reservation Icon.png"))); // NOI18N
        jButton34.setText("Reservation");
        jButton34.setBorder(null);
        jButton34.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton34.setIconTextGap(40);
        jButton34.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton34ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton34, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 310, 220, 60));

        jButton43.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        jButton43.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ClientIcons/LOG OUT ICOn.png"))); // NOI18N
        jButton43.setText("Log out");
        jButton43.setBorder(null);
        jButton43.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton43.setIconTextGap(40);
        jButton43.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton43ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton43, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 670, 220, 60));

        jPanel1.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 230, 730));

        Buttons.addTab("tab3", jPanel1);

        YellowBackground.add(Buttons, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 230, 760));

        MainPanel.add(YellowBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 250, 900));

        Home_panel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel13.setBackground(new java.awt.Color(255, 255, 255));
        jPanel13.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel6.setBackground(new java.awt.Color(51, 0, 0));
        jPanel6.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        userIDlabel.setFont(new java.awt.Font("Bebas Neue", 0, 30)); // NOI18N
        userIDlabel.setForeground(new java.awt.Color(255, 255, 255));
        userIDlabel.setText("------");
        jPanel6.add(userIDlabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 10, 60, -1));

        NameLabel.setFont(new java.awt.Font("Bebas Neue", 0, 50)); // NOI18N
        NameLabel.setForeground(new java.awt.Color(255, 255, 255));
        NameLabel.setText("-------------------------");
        jPanel6.add(NameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(239, 560, 410, -1));

        jLabel26.setFont(new java.awt.Font("Bebas Neue", 0, 150)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(255, 255, 255));
        jLabel26.setText("University CANTEEN");
        jPanel6.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 200, 990, -1));

        jLabel72.setFont(new java.awt.Font("Bebas Neue", 0, 60)); // NOI18N
        jLabel72.setForeground(new java.awt.Color(255, 255, 255));
        jLabel72.setText("WE cook your favorite food!");
        jPanel6.add(jLabel72, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 340, -1, -1));

        jLabel74.setFont(new java.awt.Font("Bebas Neue", 0, 50)); // NOI18N
        jLabel74.setForeground(new java.awt.Color(255, 255, 255));
        jLabel74.setText("welcome,");
        jPanel6.add(jLabel74, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 560, -1, -1));

        jButton41.setBackground(new java.awt.Color(204, 0, 0));
        jButton41.setFont(new java.awt.Font("Bebas Neue", 0, 24)); // NOI18N
        jButton41.setForeground(new java.awt.Color(255, 255, 255));
        jButton41.setText("ORDER NOW");
        jButton41.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel6.add(jButton41, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 410, 160, 50));

        jLabel23.setFont(new java.awt.Font("Bebas Neue", 0, 30)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setText("Bohol Island State University");
        jPanel6.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 190, -1, -1));

        jLabel78.setFont(new java.awt.Font("Bebas Neue", 0, 30)); // NOI18N
        jLabel78.setForeground(new java.awt.Color(255, 255, 255));
        jLabel78.setText("id:");
        jPanel6.add(jLabel78, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ClientIcons/DESIGNNNN.png"))); // NOI18N
        jPanel6.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 420, -1, -1));

        jPanel13.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 1170, 880));

        Home_panel.add(jPanel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1550, 900));

        Pages.addTab("tab2", Home_panel);

        food_panel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        food_table.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        food_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Adobo", "15", null, "25.00"},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Quantity", "Image", "Price"
            }
        ));
        food_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                food_tableMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                food_tableMouseEntered(evt);
            }
        });
        jScrollPane1.setViewportView(food_table);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 800, 630));

        jPanel11.setBackground(new java.awt.Color(51, 0, 0));
        jPanel11.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel14.setBackground(new java.awt.Color(255, 255, 255));
        jPanel14.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel14.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel15.setBackground(new java.awt.Color(255, 255, 255));
        jPanel15.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel15.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel14.add(jPanel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 110, 300, 300));

        jPanel16.setBackground(new java.awt.Color(255, 255, 255));
        jPanel16.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel16.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel17.setBackground(new java.awt.Color(255, 255, 255));
        jPanel17.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel17.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel16.add(jPanel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 110, 300, 300));

        jPanel14.add(jPanel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 110, 300, 300));
        jPanel14.add(food_img, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 300, 300));

        jPanel11.add(jPanel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 100, 300, 300));

        jPanel18.setBackground(new java.awt.Color(255, 255, 255));
        jPanel18.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel18.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        foodAddtoCartBtn.setBackground(new java.awt.Color(255, 204, 0));
        foodAddtoCartBtn.setFont(new java.awt.Font("Artifakt Element", 0, 18)); // NOI18N
        foodAddtoCartBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ClientIcons/0de0cd80d803e78f0ef499af6c0d61e7-removebg-preview (1).png"))); // NOI18N
        foodAddtoCartBtn.setText("Add to Cart");
        foodAddtoCartBtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        foodAddtoCartBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                foodAddtoCartBtnActionPerformed(evt);
            }
        });
        jPanel18.add(foodAddtoCartBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, 280, 50));

        jLabel2.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        jLabel2.setText("Quantity");
        jPanel18.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, -1));

        jLabel3.setFont(new java.awt.Font("Artifakt Element", 1, 18)); // NOI18N
        jLabel3.setText("P");
        jPanel18.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 150, 20, 30));

        spin.setValue(1);
        spin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                spinMouseClicked(evt);
            }
        });
        spin.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                spinPropertyChange(evt);
            }
        });
        jPanel18.add(spin, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 80, 40));

        food_price.setFont(new java.awt.Font("Artifakt Element", 1, 12)); // NOI18N
        food_price.setText("0.00");
        jPanel18.add(food_price, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 150, 190, 30));

        jLabel5.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        jLabel5.setText("Name");
        jPanel18.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        food_name.setFont(new java.awt.Font("Artifakt Element", 1, 14)); // NOI18N
        jPanel18.add(food_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 280, 30));

        jLabel4.setFont(new java.awt.Font("Artifakt Element", 1, 14)); // NOI18N
        jLabel4.setText("Foods");
        jPanel18.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 130, -1, -1));

        jButton24.setBackground(new java.awt.Color(51, 204, 0));
        jButton24.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        jButton24.setText("OK");
        jButton24.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton24ActionPerformed(evt);
            }
        });
        jPanel18.add(jButton24, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 80, 80, 40));

        jLabel18.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        jLabel18.setText("Category:");
        jPanel18.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, -1, -1));

        jPanel35.setBackground(new java.awt.Color(204, 204, 204));
        jPanel35.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel17.setFont(new java.awt.Font("Artifakt Element", 1, 24)); // NOI18N
        jLabel17.setText("P");
        jPanel35.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 5, -1, 40));

        total_label.setFont(new java.awt.Font("Artifakt Element", 1, 24)); // NOI18N
        total_label.setText("0.00");
        jPanel35.add(total_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 5, -1, 40));

        jLabel19.setFont(new java.awt.Font("Artifakt Element", 0, 18)); // NOI18N
        jLabel19.setText("Total");
        jPanel35.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

        jPanel18.add(jPanel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 190, 300, 50));

        jLabel22.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        jLabel22.setText("Price");
        jPanel18.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 40, 30));

        jPanel11.add(jPanel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 420, 300, 310));

        drinksLabel3.setFont(new java.awt.Font("Bebas Neue", 0, 60)); // NOI18N
        drinksLabel3.setForeground(new java.awt.Color(255, 255, 255));
        drinksLabel3.setText("foods");
        jPanel11.add(drinksLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 20, -1, -1));

        jPanel2.add(jPanel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1200, 900));

        food_panel.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1200, 900));

        Pages.addTab("tab3", food_panel);

        jPanel19.setBackground(new java.awt.Color(255, 255, 255));
        jPanel19.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel12.setBackground(new java.awt.Color(51, 0, 0));
        jPanel12.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        drinks_table.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        drinks_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Adobo", "15", null, "25.00"},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Quantity", "Image", "Price"
            }
        ));
        drinks_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                drinks_tableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(drinks_table);

        jPanel12.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 800, 630));

        jPanel20.setBackground(new java.awt.Color(255, 255, 255));
        jPanel20.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel20.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel21.setBackground(new java.awt.Color(255, 255, 255));
        jPanel21.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel21.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel20.add(jPanel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 110, 300, 300));

        jPanel22.setBackground(new java.awt.Color(255, 255, 255));
        jPanel22.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel22.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel23.setBackground(new java.awt.Color(255, 255, 255));
        jPanel23.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel23.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel22.add(jPanel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 110, 300, 300));

        jPanel20.add(jPanel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 110, 300, 300));
        jPanel20.add(drinks_img, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 300, 300));

        jPanel12.add(jPanel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 100, 300, 300));

        jPanel24.setBackground(new java.awt.Color(255, 255, 255));
        jPanel24.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel24.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        drinksAddToCartBtn.setBackground(new java.awt.Color(255, 204, 0));
        drinksAddToCartBtn.setFont(new java.awt.Font("Artifakt Element", 0, 18)); // NOI18N
        drinksAddToCartBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ClientIcons/0de0cd80d803e78f0ef499af6c0d61e7-removebg-preview (1).png"))); // NOI18N
        drinksAddToCartBtn.setText("Add to Cart");
        drinksAddToCartBtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        drinksAddToCartBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drinksAddToCartBtnActionPerformed(evt);
            }
        });
        jPanel24.add(drinksAddToCartBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, 280, 50));

        jLabel7.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        jLabel7.setText("Quantity");
        jPanel24.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, -1));

        drinksLabel.setFont(new java.awt.Font("Artifakt Element", 1, 14)); // NOI18N
        drinksLabel.setText("Drinks");
        jPanel24.add(drinksLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 130, -1, -1));
        jPanel24.add(drinks_quant, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 80, 40));

        jLabel10.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        jLabel10.setText("Name");
        jPanel24.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        drinks_name.setFont(new java.awt.Font("Artifakt Element", 1, 14)); // NOI18N
        jPanel24.add(drinks_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 280, 30));

        jButton25.setBackground(new java.awt.Color(51, 204, 0));
        jButton25.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        jButton25.setText("OK");
        jButton25.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton25ActionPerformed(evt);
            }
        });
        jPanel24.add(jButton25, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 80, 80, 40));

        drinks_price.setFont(new java.awt.Font("Artifakt Element", 1, 12)); // NOI18N
        drinks_price.setText("0.00");
        jPanel24.add(drinks_price, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 158, 80, 20));

        jPanel36.setBackground(new java.awt.Color(204, 204, 204));

        jLabel30.setFont(new java.awt.Font("Artifakt Element", 1, 24)); // NOI18N
        jLabel30.setText("P");

        drink_total.setFont(new java.awt.Font("Artifakt Element", 1, 24)); // NOI18N
        drink_total.setText("0.00");

        jLabel34.setFont(new java.awt.Font("Artifakt Element", 0, 18)); // NOI18N
        jLabel34.setText("Total");

        javax.swing.GroupLayout jPanel36Layout = new javax.swing.GroupLayout(jPanel36);
        jPanel36.setLayout(jPanel36Layout);
        jPanel36Layout.setHorizontalGroup(
            jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel36Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel34)
                .addGap(30, 30, 30)
                .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(drink_total)
                .addContainerGap(131, Short.MAX_VALUE))
        );
        jPanel36Layout.setVerticalGroup(
            jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel36Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel36Layout.createSequentialGroup()
                        .addComponent(jLabel34, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(3, 3, 3))
                    .addGroup(jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel30, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                        .addComponent(drink_total)))
                .addContainerGap())
        );

        jPanel24.add(jPanel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 190, 300, 50));

        jLabel11.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        jLabel11.setText("Price");
        jPanel24.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, -1, 30));

        jLabel35.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        jLabel35.setText("Category:");
        jPanel24.add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, -1, -1));

        jLabel6.setFont(new java.awt.Font("Artifakt Element", 1, 18)); // NOI18N
        jLabel6.setText("P");
        jPanel24.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 150, 20, 30));

        jPanel12.add(jPanel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 420, 300, 310));

        drinksLabel2.setFont(new java.awt.Font("Bebas Neue", 0, 60)); // NOI18N
        drinksLabel2.setForeground(new java.awt.Color(255, 255, 255));
        drinksLabel2.setText("drinks");
        jPanel12.add(drinksLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 20, -1, -1));

        jPanel19.add(jPanel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1290, 900));

        javax.swing.GroupLayout Drinks_panelLayout = new javax.swing.GroupLayout(Drinks_panel);
        Drinks_panel.setLayout(Drinks_panelLayout);
        Drinks_panelLayout.setHorizontalGroup(
            Drinks_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1556, Short.MAX_VALUE)
            .addGroup(Drinks_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(Drinks_panelLayout.createSequentialGroup()
                    .addComponent(jPanel19, javax.swing.GroupLayout.PREFERRED_SIZE, 1556, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        Drinks_panelLayout.setVerticalGroup(
            Drinks_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 900, Short.MAX_VALUE)
            .addGroup(Drinks_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Pages.addTab("tab4", Drinks_panel);

        jPanel7.setBackground(new java.awt.Color(51, 0, 0));
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        snacks_table.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        snacks_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Adobo", "15", null, "25.00"},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Quantity", "Image", "Price"
            }
        ));
        snacks_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                snacks_tableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(snacks_table);

        jPanel7.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 800, 630));

        jPanel25.setBackground(new java.awt.Color(255, 255, 255));
        jPanel25.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel25.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel26.setBackground(new java.awt.Color(255, 255, 255));
        jPanel26.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel26.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel25.add(jPanel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 110, 300, 300));

        jPanel27.setBackground(new java.awt.Color(255, 255, 255));
        jPanel27.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel27.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel28.setBackground(new java.awt.Color(255, 255, 255));
        jPanel28.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel28.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel27.add(jPanel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 110, 300, 300));

        jPanel25.add(jPanel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 110, 300, 300));
        jPanel25.add(snack_img, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 300, 300));

        jPanel7.add(jPanel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 100, 300, 300));

        jPanel29.setBackground(new java.awt.Color(255, 255, 255));
        jPanel29.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel29.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        snacksAddToCartBtn.setBackground(new java.awt.Color(255, 204, 0));
        snacksAddToCartBtn.setFont(new java.awt.Font("Artifakt Element", 0, 18)); // NOI18N
        snacksAddToCartBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ClientIcons/0de0cd80d803e78f0ef499af6c0d61e7-removebg-preview (1).png"))); // NOI18N
        snacksAddToCartBtn.setText("Add to Cart");
        snacksAddToCartBtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        snacksAddToCartBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                snacksAddToCartBtnActionPerformed(evt);
            }
        });
        jPanel29.add(snacksAddToCartBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, 280, 50));

        jLabel12.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        jLabel12.setText("Quantity");
        jPanel29.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, -1));

        snacksLabel.setFont(new java.awt.Font("Artifakt Element", 1, 14)); // NOI18N
        snacksLabel.setText("Snacks");
        jPanel29.add(snacksLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 130, -1, -1));
        jPanel29.add(snack_quant, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 80, 40));

        jLabel15.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        jLabel15.setText("Name");
        jPanel29.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        snack_name.setFont(new java.awt.Font("Artifakt Element", 1, 14)); // NOI18N
        jPanel29.add(snack_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 280, 30));

        jButton26.setBackground(new java.awt.Color(51, 204, 0));
        jButton26.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        jButton26.setText("OK");
        jButton26.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton26.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton26ActionPerformed(evt);
            }
        });
        jPanel29.add(jButton26, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 80, 80, 40));

        snack_prc.setFont(new java.awt.Font("Artifakt Element", 1, 12)); // NOI18N
        snack_prc.setText("0.00");
        jPanel29.add(snack_prc, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 158, 100, 20));

        jPanel57.setBackground(new java.awt.Color(204, 204, 204));
        jPanel57.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel36.setFont(new java.awt.Font("Artifakt Element", 0, 18)); // NOI18N
        jLabel36.setText("Total");
        jPanel57.add(jLabel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

        snack_total.setFont(new java.awt.Font("Artifakt Element", 1, 24)); // NOI18N
        snack_total.setText("0.00");
        jPanel57.add(snack_total, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 5, 160, 40));

        jLabel43.setFont(new java.awt.Font("Artifakt Element", 1, 24)); // NOI18N
        jLabel43.setText("P");
        jPanel57.add(jLabel43, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 5, -1, 40));

        jPanel29.add(jPanel57, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 190, 300, 50));

        jLabel14.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        jLabel14.setText("Price");
        jPanel29.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, -1, 30));

        jLabel44.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        jLabel44.setText("Category:");
        jPanel29.add(jLabel44, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, -1, -1));

        jLabel9.setFont(new java.awt.Font("Artifakt Element", 1, 18)); // NOI18N
        jLabel9.setText("P");
        jPanel29.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 150, 20, 30));

        jPanel7.add(jPanel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 420, 300, 310));

        drinksLabel1.setFont(new java.awt.Font("Bebas Neue", 0, 60)); // NOI18N
        drinksLabel1.setForeground(new java.awt.Color(255, 255, 255));
        drinksLabel1.setText("snacks");
        jPanel7.add(drinksLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 20, -1, -1));

        javax.swing.GroupLayout snack_panelLayout = new javax.swing.GroupLayout(snack_panel);
        snack_panel.setLayout(snack_panelLayout);
        snack_panelLayout.setHorizontalGroup(
            snack_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1556, Short.MAX_VALUE)
            .addGroup(snack_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(snack_panelLayout.createSequentialGroup()
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 1556, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        snack_panelLayout.setVerticalGroup(
            snack_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 900, Short.MAX_VALUE)
            .addGroup(snack_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, 900, Short.MAX_VALUE))
        );

        Pages.addTab("tab5", snack_panel);

        jPanel8.setBackground(new java.awt.Color(51, 0, 0));
        jPanel8.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cart_table.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        cart_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, "Adobo", null, "25.00", "3", "75.00"},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Image", "Name", "Category", "Price", "Quantiy", "Total"
            }
        ));
        cart_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cart_tableMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(cart_table);

        jPanel8.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 860, 610));

        jPanel34.setBackground(new java.awt.Color(255, 255, 255));
        jPanel34.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));
        jPanel9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jPanel9.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel16.setFont(new java.awt.Font("Artifakt Element", 1, 24)); // NOI18N
        jLabel16.setText("ORDER SUMMARY");
        jPanel9.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        jPanel34.add(jPanel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 300, 70));

        cart_image.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel34.add(cart_image, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 80, 160, 150));

        cart_quant.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        cart_quant.setText("---------");
        jPanel34.add(cart_quant, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 370, -1, -1));

        itemname.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        itemname.setText("-----------------------------");
        jPanel34.add(itemname, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 280, 220, -1));

        category.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        category.setText("---------");
        jPanel34.add(category, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 310, -1, -1));

        cart_price.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        cart_price.setText("--------");
        jPanel34.add(cart_price, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 340, 120, -1));

        jLabel25.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        jLabel25.setText("Item:");
        jPanel34.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 280, -1, -1));

        jLabel27.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        jLabel27.setText("Category:");
        jPanel34.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 310, -1, -1));

        jLabel28.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        jLabel28.setText("Price:");
        jPanel34.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 340, -1, -1));

        jLabel29.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        jLabel29.setText("Quantity:");
        jPanel34.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 370, -1, -1));

        jPanel33.setBackground(new java.awt.Color(204, 204, 204));
        jPanel33.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cart_total.setFont(new java.awt.Font("Artifakt Element", 1, 24)); // NOI18N
        cart_total.setText("---------------");
        jPanel33.add(cart_total, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 10, 180, -1));

        jLabel31.setFont(new java.awt.Font("Artifakt Element", 1, 24)); // NOI18N
        jLabel31.setText("Total:");
        jPanel33.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jLabel32.setFont(new java.awt.Font("Artifakt Element", 1, 24)); // NOI18N
        jLabel32.setText("P");
        jPanel33.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 10, -1, -1));

        jPanel34.add(jPanel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 410, 300, 60));

        jLabel33.setFont(new java.awt.Font("Artifakt Element", 1, 14)); // NOI18N
        jLabel33.setText("P");
        jPanel34.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 340, -1, -1));

        jPanel8.add(jPanel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 110, 300, 480));

        drinksLabel4.setFont(new java.awt.Font("Bebas Neue", 0, 60)); // NOI18N
        drinksLabel4.setForeground(new java.awt.Color(255, 255, 255));
        drinksLabel4.setText("item cart");
        jPanel8.add(drinksLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 20, -1, -1));

        jPanel10.setBackground(new java.awt.Color(255, 255, 255));
        jPanel10.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton27.setBackground(new java.awt.Color(51, 153, 0));
        jButton27.setFont(new java.awt.Font("Artifakt Element", 0, 18)); // NOI18N
        jButton27.setForeground(new java.awt.Color(255, 255, 255));
        jButton27.setText("CHECKOUT");
        jButton27.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton27.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton27ActionPerformed(evt);
            }
        });
        jPanel10.add(jButton27, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 300, 80));

        jButton18.setBackground(new java.awt.Color(255, 153, 0));
        jButton18.setFont(new java.awt.Font("Artifakt Element", 0, 18)); // NOI18N
        jButton18.setText("RESERVE");
        jButton18.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });
        jPanel10.add(jButton18, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 300, 50));

        Options.addTab("tab1", jPanel10);

        jPanel31.setBackground(new java.awt.Color(255, 255, 255));
        jPanel31.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton29.setBackground(new java.awt.Color(51, 153, 0));
        jButton29.setFont(new java.awt.Font("Artifakt Element", 0, 18)); // NOI18N
        jButton29.setForeground(new java.awt.Color(255, 255, 255));
        jButton29.setText("CASH");
        jButton29.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton29.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton29ActionPerformed(evt);
            }
        });
        jPanel31.add(jButton29, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 150, 80));

        jButton28.setBackground(new java.awt.Color(255, 153, 51));
        jButton28.setFont(new java.awt.Font("Artifakt Element", 0, 18)); // NOI18N
        jButton28.setText("CREDIT");
        jButton28.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton28.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton28ActionPerformed(evt);
            }
        });
        jPanel31.add(jButton28, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 60, 150, 80));

        javax.swing.GroupLayout jPanel30Layout = new javax.swing.GroupLayout(jPanel30);
        jPanel30.setLayout(jPanel30Layout);
        jPanel30Layout.setHorizontalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel30Layout.setVerticalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        Options.addTab("tab2", jPanel30);

        jPanel8.add(Options, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 550, 300, 170));

        jButton1.setBackground(new java.awt.Color(255, 102, 102));
        jButton1.setFont(new java.awt.Font("Artifakt Element", 1, 18)); // NOI18N
        jButton1.setText("CANCEL");
        jButton1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel8.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 730, 230, 60));

        javax.swing.GroupLayout cart_panelLayout = new javax.swing.GroupLayout(cart_panel);
        cart_panel.setLayout(cart_panelLayout);
        cart_panelLayout.setHorizontalGroup(
            cart_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1556, Short.MAX_VALUE)
            .addGroup(cart_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(cart_panelLayout.createSequentialGroup()
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 1556, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        cart_panelLayout.setVerticalGroup(
            cart_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 900, Short.MAX_VALUE)
            .addGroup(cart_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, 900, Short.MAX_VALUE))
        );

        Pages.addTab("tab6", cart_panel);

        Transaction_Panel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel32.setBackground(new java.awt.Color(51, 0, 0));
        jPanel32.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        transacTable.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        transacTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"04/22/2024", "Steeve Tagasling", "Rice", "3", "10.00", "30.00", "Paid"},
                {"04/22/2024", "Winzeal Agoc", "Adobo", "2", "25.00", "50.00", "Paid"},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Date", "Name", "Items", "Quantity", "Price", "Total Amount", "Status"
            }
        ));
        jScrollPane7.setViewportView(transacTable);

        jPanel32.add(jScrollPane7, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 110, 1110, 720));

        jLabel47.setFont(new java.awt.Font("Artifakt Element", 0, 18)); // NOI18N
        jLabel47.setForeground(new java.awt.Color(255, 255, 255));
        jLabel47.setText("May 1, 2024");
        jPanel32.add(jLabel47, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 80, -1, -1));

        drinksLabel5.setFont(new java.awt.Font("Bebas Neue", 0, 60)); // NOI18N
        drinksLabel5.setForeground(new java.awt.Color(255, 255, 255));
        drinksLabel5.setText("transaction history ( paid )");
        jPanel32.add(drinksLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, -1, -1));

        Transaction_Panel.add(jPanel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1550, 900));

        Pages.addTab("tab7", Transaction_Panel);

        Credits_panel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel39.setBackground(new java.awt.Color(51, 0, 0));
        jPanel39.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        creditsTable.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        creditsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"04/22/2024", "Steeve Tagasling", "Rice", "3", "10.00", "30.00", "Credits"},
                {"04/22/2024", "Winzeal Agoc", "Adobo", "2", "25.00", "50.00", "Credits"},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Date", "Name", "Items", "Quantity", "Price", "Total Amount", "Status"
            }
        ));
        jScrollPane8.setViewportView(creditsTable);

        jPanel39.add(jScrollPane8, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 110, 830, 540));

        jLabel49.setFont(new java.awt.Font("Artifakt Element", 0, 18)); // NOI18N
        jLabel49.setForeground(new java.awt.Color(255, 255, 255));
        jLabel49.setText("May 1, 2024");
        jPanel39.add(jLabel49, new org.netbeans.lib.awtextra.AbsoluteConstraints(1090, 80, -1, -1));

        jPanel40.setBackground(new java.awt.Color(255, 255, 255));
        jPanel40.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel42.setBackground(new java.awt.Color(255, 255, 255));
        jPanel42.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jPanel42.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel37.setFont(new java.awt.Font("Artifakt Element", 1, 18)); // NOI18N
        jLabel37.setText("PAY NOW");
        jPanel42.add(jLabel37, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jButton31.setBackground(new java.awt.Color(51, 255, 51));
        jButton31.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jButton31.setForeground(new java.awt.Color(255, 255, 255));
        jButton31.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ClientIcons/CASH ICON.png"))); // NOI18N
        jButton31.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton31.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton31ActionPerformed(evt);
            }
        });
        jPanel42.add(jButton31, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 40, 140, 80));

        jButton32.setBackground(new java.awt.Color(48, 111, 182));
        jButton32.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ClientIcons/GCASH.png"))); // NOI18N
        jButton32.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton32.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton32ActionPerformed(evt);
            }
        });
        jPanel42.add(jButton32, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 140, 80));

        jPanel40.add(jPanel42, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 310, 130));

        jPanel41.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel44.setBackground(new java.awt.Color(255, 255, 255));
        jPanel44.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jPanel44.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel46.setBackground(new java.awt.Color(153, 204, 255));
        jPanel46.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel38.setFont(new java.awt.Font("Artifakt Element", 1, 20)); // NOI18N
        jLabel38.setText("P");
        jPanel46.add(jLabel38, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 10, 30, 30));

        jLabel39.setFont(new java.awt.Font("Artifakt Element", 1, 18)); // NOI18N
        jLabel39.setText("Total");
        jPanel46.add(jLabel39, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, -1, 30));

        jLabel40.setFont(new java.awt.Font("Artifakt Element", 1, 18)); // NOI18N
        jLabel40.setText("30.00");
        jPanel46.add(jLabel40, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 10, -1, 30));

        jPanel44.add(jPanel46, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 240, 310, 50));

        jButton33.setBackground(new java.awt.Color(48, 111, 182));
        jButton33.setFont(new java.awt.Font("Artifakt Element", 0, 18)); // NOI18N
        jButton33.setForeground(new java.awt.Color(255, 255, 255));
        jButton33.setText("PAY ONLINE");
        jButton33.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton33.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton33ActionPerformed(evt);
            }
        });
        jPanel44.add(jButton33, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 300, 290, 70));

        jLabel41.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        jLabel41.setText("Number");
        jPanel44.add(jLabel41, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, -1, -1));

        jLabel42.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        jLabel42.setText("Name");
        jPanel44.add(jLabel42, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, -1));

        jLabel51.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        jLabel51.setText("Quantity");
        jPanel44.add(jLabel51, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, -1, -1));

        jLabel52.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        jLabel52.setText("Price");
        jPanel44.add(jLabel52, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, -1, -1));

        jTextField1.setBackground(new java.awt.Color(204, 204, 204));
        jTextField1.setText(" +63");
        jTextField1.setBorder(null);
        jPanel44.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, 290, 40));

        jLabel53.setFont(new java.awt.Font("Artifakt Element", 1, 14)); // NOI18N
        jLabel53.setText("Rice");
        jPanel44.add(jLabel53, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 60, -1, -1));

        jLabel54.setFont(new java.awt.Font("Artifakt Element", 1, 14)); // NOI18N
        jLabel54.setText("3");
        jPanel44.add(jLabel54, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 90, -1, -1));

        jLabel55.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        jLabel55.setText("P");
        jPanel44.add(jLabel55, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 120, 20, -1));

        jLabel56.setFont(new java.awt.Font("Artifakt Element", 1, 14)); // NOI18N
        jLabel56.setText("10.00");
        jPanel44.add(jLabel56, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 120, -1, -1));

        jPanel41.add(jPanel44, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 310, 380));

        PaymentOptions2.addTab("tab1", jPanel41);

        jPanel43.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel47.setBackground(new java.awt.Color(255, 255, 255));
        jPanel47.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jPanel47.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel48.setBackground(new java.awt.Color(102, 204, 0));
        jPanel48.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel57.setFont(new java.awt.Font("Artifakt Element", 1, 18)); // NOI18N
        jLabel57.setText("P");
        jPanel48.add(jLabel57, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 10, 30, 30));

        jLabel58.setFont(new java.awt.Font("Artifakt Element", 1, 18)); // NOI18N
        jLabel58.setText("Total");
        jPanel48.add(jLabel58, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, -1, 30));

        jLabel59.setFont(new java.awt.Font("Artifakt Element", 1, 18)); // NOI18N
        jLabel59.setText("30.00");
        jPanel48.add(jLabel59, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 10, -1, 30));

        jPanel47.add(jPanel48, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 240, 310, 50));

        jLabel61.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        jLabel61.setText("Name");
        jPanel47.add(jLabel61, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, -1));

        jLabel62.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        jLabel62.setText("Quantity");
        jPanel47.add(jLabel62, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, -1, -1));

        jLabel63.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        jLabel63.setText("Price");
        jPanel47.add(jLabel63, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, -1, -1));

        jLabel64.setFont(new java.awt.Font("Artifakt Element", 1, 14)); // NOI18N
        jLabel64.setText("Rice");
        jPanel47.add(jLabel64, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 60, -1, -1));

        jLabel65.setFont(new java.awt.Font("Artifakt Element", 1, 14)); // NOI18N
        jLabel65.setText("3");
        jPanel47.add(jLabel65, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 90, -1, -1));

        jLabel66.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        jLabel66.setText("P");
        jPanel47.add(jLabel66, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 120, 20, -1));

        jLabel67.setFont(new java.awt.Font("Artifakt Element", 1, 14)); // NOI18N
        jLabel67.setText("10.00");
        jPanel47.add(jLabel67, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 120, -1, -1));

        jLabel68.setBackground(new java.awt.Color(51, 204, 0));
        jLabel68.setFont(new java.awt.Font("Artifakt Element", 1, 29)); // NOI18N
        jLabel68.setText("PAY AT THE CASHIER");
        jPanel47.add(jLabel68, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 300, -1, -1));

        jPanel43.add(jPanel47, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 310, 380));

        PaymentOptions2.addTab("tab2", jPanel43);

        jPanel40.add(PaymentOptions2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 310, 410));

        jPanel39.add(jPanel40, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 110, 310, 460));

        drinksLabel6.setFont(new java.awt.Font("Bebas Neue", 0, 60)); // NOI18N
        drinksLabel6.setForeground(new java.awt.Color(255, 255, 255));
        drinksLabel6.setText("transaction history ( credits )");
        jPanel39.add(drinksLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, -1, -1));

        Credits_panel.add(jPanel39, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1550, 900));

        Pages.addTab("tab8", Credits_panel);

        Reservations_panel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel45.setBackground(new java.awt.Color(51, 0, 0));
        jPanel45.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        reserveTbl.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        reserveTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, "Adobo", "25.00", "3", "75.00"},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Image", "Customer Name", "Item", "Price", "Quantiy", "Total"
            }
        ));
        reserveTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                reserveTblMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(reserveTbl);

        jPanel45.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, 840, 610));

        jButton38.setBackground(new java.awt.Color(255, 0, 51));
        jButton38.setFont(new java.awt.Font("Artifakt Element", 0, 18)); // NOI18N
        jButton38.setForeground(new java.awt.Color(255, 255, 255));
        jButton38.setText("CANCEL");
        jButton38.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton38.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton38ActionPerformed(evt);
            }
        });
        jPanel45.add(jButton38, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 730, 210, 40));

        drinksLabel7.setFont(new java.awt.Font("Bebas Neue", 0, 60)); // NOI18N
        drinksLabel7.setForeground(new java.awt.Color(255, 255, 255));
        drinksLabel7.setText("RESERVATIONS");
        jPanel45.add(drinksLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, -1, -1));

        jPanel52.setBackground(new java.awt.Color(255, 255, 255));
        jPanel52.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel53.setBackground(new java.awt.Color(204, 204, 204));
        jPanel53.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel70.setFont(new java.awt.Font("Artifakt Element", 1, 20)); // NOI18N
        jLabel70.setText("P");
        jPanel53.add(jLabel70, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 10, 30, 30));

        jLabel71.setFont(new java.awt.Font("Artifakt Element", 1, 18)); // NOI18N
        jLabel71.setText("Total");
        jPanel53.add(jLabel71, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, -1, 30));

        rtotal.setFont(new java.awt.Font("Artifakt Element", 1, 18)); // NOI18N
        rtotal.setText("75.00");
        jPanel53.add(rtotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 10, -1, 30));

        jPanel52.add(jPanel53, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 260, 300, 50));

        jLabel73.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        jLabel73.setText("Price");
        jPanel52.add(jLabel73, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, -1, -1));

        rquant.setFont(new java.awt.Font("Artifakt Element", 1, 14)); // NOI18N
        rquant.setText("3");
        jPanel52.add(rquant, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 130, 10, -1));

        jLabel75.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        jLabel75.setText("Item:");
        jPanel52.add(jLabel75, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, -1, -1));

        rname.setFont(new java.awt.Font("Artifakt Element", 1, 14)); // NOI18N
        rname.setText("----------------------------");
        jPanel52.add(rname, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 90, -1, -1));

        jLabel77.setFont(new java.awt.Font("Artifakt Element", 1, 18)); // NOI18N
        jLabel77.setText("P");
        jPanel52.add(jLabel77, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 140, 20, 60));

        ritem.setFont(new java.awt.Font("Artifakt Element", 1, 14)); // NOI18N
        ritem.setText("Adobo");
        jPanel52.add(ritem, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 190, 160, -1));

        rprc.setFont(new java.awt.Font("Artifakt Element", 1, 14)); // NOI18N
        rprc.setText("25.00");
        jPanel52.add(rprc, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 160, -1, -1));

        jButton37.setBackground(new java.awt.Color(51, 153, 0));
        jButton37.setFont(new java.awt.Font("Artifakt Element", 0, 18)); // NOI18N
        jButton37.setForeground(new java.awt.Color(255, 255, 255));
        jButton37.setText("CHECKOUT");
        jButton37.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton37.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton37ActionPerformed(evt);
            }
        });
        jPanel52.add(jButton37, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 310, 300, 80));

        jLabel79.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        jLabel79.setText("Quantity");
        jPanel52.add(jLabel79, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, -1, -1));

        jLabel90.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        jLabel90.setText("Name");
        jPanel52.add(jLabel90, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, -1, -1));

        jPanel49.setBackground(new java.awt.Color(255, 255, 255));
        jPanel49.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jPanel49.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Artifakt Element", 1, 24)); // NOI18N
        jLabel1.setText("ORDER SUMMARY");
        jPanel49.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 15, -1, 40));

        jPanel52.add(jPanel49, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 300, 70));

        jPanel45.add(jPanel52, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 110, -1, 390));

        Reservations_panel.add(jPanel45, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1550, 900));

        Pages.addTab("tab8", Reservations_panel);

        javax.swing.GroupLayout jPanel37Layout = new javax.swing.GroupLayout(jPanel37);
        jPanel37.setLayout(jPanel37Layout);
        jPanel37Layout.setHorizontalGroup(
            jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1556, Short.MAX_VALUE)
        );
        jPanel37Layout.setVerticalGroup(
            jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 900, Short.MAX_VALUE)
        );

        Pages.addTab("tab9", jPanel37);

        javax.swing.GroupLayout jPanel38Layout = new javax.swing.GroupLayout(jPanel38);
        jPanel38.setLayout(jPanel38Layout);
        jPanel38Layout.setHorizontalGroup(
            jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1556, Short.MAX_VALUE)
        );
        jPanel38Layout.setVerticalGroup(
            jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 900, Short.MAX_VALUE)
        );

        Pages.addTab("tab10", jPanel38);

        MainPanel.add(Pages, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, -30, 1550, 930));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(MainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(MainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        Pages.setSelectedIndex(3);
        Snacks_Table_View();
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
       Pages.setSelectedIndex(1);
       Food_Table_View() ;
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        Pages.setSelectedIndex(2);
        Drinks_Table_View();
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
       Buttons.setSelectedIndex(1);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
      Buttons.setSelectedIndex(0);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
      Buttons.setSelectedIndex(1);
    }//GEN-LAST:event_jButton12ActionPerformed

     public void retrieveCartDataForCredit(String userID) {
    try {
        // SQL query with JOIN and WHERE to retrieve cart data based on user ID
        String query = "SELECT credits.date, credits.name, credits.item, credits.quantity, credits.price, credits.total, credits.status\n" +
                       "FROM credits\n" +
                       "INNER JOIN account ON credits.user_id = account.id\n" +
                       "WHERE credits.user_id = ?";
        
        // Prepare the statement
        PreparedStatement pst = con.prepareStatement(query);
        pst.setString(1, userID); // Set the user ID parameter
        
        // Execute the query
        ResultSet rs = pst.executeQuery();
        
        // Clear existing data in the table model
        credits_model = (DefaultTableModel) creditsTable.getModel();
        credits_model.setRowCount(0);
        
        // Populate the model with retrieved data
        while (rs.next()) {
            String transacDate = rs.getString("date");
            String transacName = rs.getString("name");
            String transacItem= rs.getString("item");
            int transacQuantity = rs.getInt("quantity");
            double transacPrice = rs.getDouble("price");
            double transacTotal = rs.getDouble("total");
            String transacStatus = rs.getString("status");
            
            // Add the retrieved data to the table model
            credits_model.addRow(new Object[]{transacDate, transacName, transacItem, transacQuantity, transacPrice, transacTotal, transacStatus});
        }
        
        // Set the model to the cart table
        creditsTable.setModel(credits_model);
        
        // Close the statement and result set
        pst.close();
        rs.close();
        
    } catch (SQLException e) {
        // Handle any exceptions
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error retrieving cart data: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
}
    
    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
       Pages.setSelectedIndex(6);
       
        String user = userIDlabel.getText();
       
       retrieveCartDataForCredit(user);
    }//GEN-LAST:event_jButton16ActionPerformed

      public void retrieveCartDataForPayments(String userID) {
    try {
        // SQL query with JOIN and WHERE to retrieve cart data based on user ID
        String query = "SELECT transactions.date, transactions.name, transactions.item, transactions.quantity, transactions.price, transactions.total, transactions.status\n" +
                       "FROM transactions\n" +
                       "INNER JOIN account ON transactions.user_id = account.id\n" +
                       "WHERE transactions.user_id = ?";
        
        // Prepare the statement
        PreparedStatement pst = con.prepareStatement(query);
        pst.setString(1, userID); // Set the user ID parameter
        
        // Execute the query
        ResultSet rs = pst.executeQuery();
        
        // Clear existing data in the table model
        transaction_model = (DefaultTableModel) transacTable.getModel();
        transaction_model.setRowCount(0);
        
        // Populate the model with retrieved data
        while (rs.next()) {
            String transacDate = rs.getString("date");
            String transacName = rs.getString("name");
            String transacItem= rs.getString("item");
            int transacQuantity = rs.getInt("quantity");
            double transacPrice = rs.getDouble("price");
            double transacTotal = rs.getDouble("total");
            String transacStatus = rs.getString("status");
            
            // Add the retrieved data to the table model
            transaction_model.addRow(new Object[]{transacDate, transacName, transacItem, transacQuantity, transacPrice, transacTotal, transacStatus});
        }
        
        // Set the model to the cart table
        transacTable.setModel(transaction_model);
        
        // Close the statement and result set
        pst.close();
        rs.close();
        
    } catch (SQLException e) {
        // Handle any exceptions
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error retrieving cart data: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
}
    
    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
       Pages.setSelectedIndex(5);
        String user = userIDlabel.getText();
       retrieveCartDataForPayments(user);
    }//GEN-LAST:event_jButton17ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
       Buttons.setSelectedIndex(2);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20ActionPerformed
       Buttons.setSelectedIndex(0);
    }//GEN-LAST:event_jButton20ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
      Pages.setSelectedIndex(0);
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       Pages.setSelectedIndex(0);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
      Pages.setSelectedIndex(0);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void food_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_food_tableMouseClicked
        // Food Mouseclicked
        
        int row = food_table.rowAtPoint(evt.getPoint());
                
                // Get the image from the table model
            ImageIcon imageIcon = (ImageIcon) food_model.getValueAt(row, 2);
            Image image = imageIcon.getImage();
            Image scaledImage = image.getScaledInstance(300, 300, Image.SCALE_SMOOTH);// LABEL IMAGES PIXEL SIZE AND MUST THE LABEL ALSO 300PIXEL SIZE
            food_img.setIcon(new ImageIcon(scaledImage));
            food_name.setText(food_model.getValueAt(food_table.getSelectedRow(), 0).toString());
            food_price.setText(food_model.getValueAt(food_table.getSelectedRow(), 3).toString());
    }//GEN-LAST:event_food_tableMouseClicked

    private void spinMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_spinMouseClicked
     
    }//GEN-LAST:event_spinMouseClicked

    private void spinPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_spinPropertyChange
    
    }//GEN-LAST:event_spinPropertyChange

    private void food_tableMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_food_tableMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_food_tableMouseEntered

    private void jButton24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton24ActionPerformed
        // TODO add your handling code here:
        double price;
        double quantity;
        Double total;
        
        String getPrice = food_price.getText();
        price = Integer.parseInt(getPrice);
        quantity = (int) spin.getValue();
        total = quantity * price;
        total_label.setText(total.toString());
    }//GEN-LAST:event_jButton24ActionPerformed

    private void drinks_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_drinks_tableMouseClicked
        // TODO add your handling code here:
        int row = drinks_table.rowAtPoint(evt.getPoint());
                
                // Get the image from the table model
            ImageIcon imageIcon = (ImageIcon) drinks_model.getValueAt(row, 2);
            Image image = imageIcon.getImage();
            Image scaledImage = image.getScaledInstance(300, 300, Image.SCALE_SMOOTH);// LABEL IMAGES PIXEL SIZE AND MUST THE LABEL ALSO 300PIXEL SIZE
            drinks_img.setIcon(new ImageIcon(scaledImage));
            drinks_name.setText(drinks_model.getValueAt(drinks_table.getSelectedRow(), 0).toString());
            drinks_price.setText(drinks_model.getValueAt(drinks_table.getSelectedRow(), 3).toString());
    }//GEN-LAST:event_drinks_tableMouseClicked

    private void jButton25ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton25ActionPerformed
        // TODO add your handling code here:
        double drink_price;
        double quantity;
        Double total;
        
        String getPrice = drinks_price.getText();
        drink_price = Integer.parseInt(getPrice);
        quantity = (int) drinks_quant.getValue();
        total = quantity * drink_price;
        drink_total.setText(total.toString());
    }//GEN-LAST:event_jButton25ActionPerformed

    private void snacks_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_snacks_tableMouseClicked
        // TODO add your handling code here:
        int row = snacks_table.rowAtPoint(evt.getPoint());
                
                // Get the image from the table model
            ImageIcon imageIcon = (ImageIcon) snacks_model.getValueAt(row, 2);
            Image image = imageIcon.getImage();
            Image scaledImage = image.getScaledInstance(300, 300, Image.SCALE_SMOOTH);// LABEL IMAGES PIXEL SIZE AND MUST THE LABEL ALSO 300PIXEL SIZE
            snack_img.setIcon(new ImageIcon(scaledImage));
            snack_name.setText(snacks_model.getValueAt(snacks_table.getSelectedRow(), 0).toString());
            snack_prc.setText(snacks_model.getValueAt(snacks_table.getSelectedRow(), 3).toString());
    }//GEN-LAST:event_snacks_tableMouseClicked

    private void jButton26ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton26ActionPerformed
        // TODO add your handling code here:
        double snack_price;
        double quantity;
        Double total;
        
        String getPrice = snack_prc.getText();
        snack_price = Integer.parseInt(getPrice);
        quantity = (int) snack_quant.getValue();
        total = quantity * snack_price;
        snack_total.setText(total.toString());
    }//GEN-LAST:event_jButton26ActionPerformed
    
    public void retrieveCartDataForCurrentUser(String userID) {
    try {
        String customer = NameLabel.getText();
        // SQL query with JOIN and WHERE to retrieve cart data based on user ID
        String query = "SELECT cart.id, cart.image, cart.name, cart.category, cart.quantity, cart.price, cart.total\n" +
                       "FROM cart\n" +
                       "INNER JOIN account ON cart.user_id = account.id\n" +
                       "WHERE cart.user_id = ?";
        
        // Prepare the statement
        PreparedStatement pst = con.prepareStatement(query);
        pst.setString(1, userID); // Set the user ID parameter
        
        // Execute the query
        ResultSet rs = pst.executeQuery();
        
        // Clear existing data in the table model
        cart_model.setRowCount(0);
        
        // Populate the model with retrieved data
        while (rs.next()) {
            int cartID = rs.getInt("id");
            byte[] imageBytes = rs.getBytes("image");
            String name = rs.getString("name");
             String category = rs.getString("category");
            int quantity = rs.getInt("quantity");
            double price = rs.getDouble("price");
            double total = rs.getDouble("total");
            
            // Create an ImageIcon from the image bytes
            ImageIcon imageIcon = new ImageIcon(imageBytes);
            
            // Add the retrieved data to the table model
            cart_model.addRow(new Object[]{cartID, imageIcon, name, category, price, quantity, total});
        }
        
        // Set the model to the cart table
        cart_table.setModel(cart_model);
        
        // Close the statement and result set
        pst.close();
        rs.close();
        
    } catch (SQLException e) {
        // Handle any exceptions
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error retrieving cart data: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
}
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        Pages.setSelectedIndex(4);
         String user = userIDlabel.getText();
        retrieveCartDataForCurrentUser(user);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void cart_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cart_tableMouseClicked
        idselectedindex = cart_model.getValueAt(cart_table.getSelectedRow(), 0).toString();
        int row = cart_table.rowAtPoint(evt.getPoint());
                
                // Get the image from the table model
            ImageIcon imageIcon = (ImageIcon) cart_model.getValueAt(row, 1);
            Image image = imageIcon.getImage();
            Image scaledImage = image.getScaledInstance(300, 300, Image.SCALE_SMOOTH);// LABEL IMAGES PIXEL SIZE AND MUST THE LABEL ALSO 300PIXEL SIZE
            cart_image.setIcon(new ImageIcon(scaledImage));
        
        itemname.setText(cart_model.getValueAt(cart_table.getSelectedRow(), 2).toString());
        category.setText(cart_model.getValueAt(cart_table.getSelectedRow(), 3).toString());
        cart_quant.setText(cart_model.getValueAt(cart_table.getSelectedRow(), 5).toString());
        cart_price.setText(cart_model.getValueAt(cart_table.getSelectedRow(), 4).toString());
        cart_total.setText(cart_model.getValueAt(cart_table.getSelectedRow(), 6).toString());
        
       
    }//GEN-LAST:event_cart_tableMouseClicked

    private void foodAddtoCartBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_foodAddtoCartBtnActionPerformed
        // Food Add to Cart Button
        String pName = food_name.getText();
            Object getQuant = spin.getValue();
            String pQuant = getQuant.toString();
            int cnvrtQuant = (int) spin.getValue();
            String pPrice = food_price.getText();
            String Total = total_label.getText();
            String userStringid = userIDlabel.getText();
            int userId = Integer.parseInt(userStringid);
            String cate = "Food";

        if (cnvrtQuant < 1 || Total.equals("0.00")) {
            JOptionPane.showMessageDialog(null, "Total is empty! Please Set a proper Quantity!", null, HEIGHT);
            return;
        }
        if (pName.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please Select a Product!", null, HEIGHT);
            return;
        }
        byte[] imageBytes = null;
        Icon icon = food_img.getIcon();
        int message = JOptionPane.showConfirmDialog(rootPane, "Are you sure you want to add this Product to Cart?", "Message", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE);
        try {
            if (icon instanceof ImageIcon) {
                ImageIcon imageIcon = (ImageIcon) icon;
                Image image = imageIcon.getImage();
                BufferedImage bufferedImage = new BufferedImage(image.getWidth(null), image.getHeight(null), BufferedImage.TYPE_INT_RGB);
                Graphics2D g2 = bufferedImage.createGraphics();
                g2.drawImage(image, 0, 0, null);
                g2.dispose();

                ByteArrayOutputStream baos = new ByteArrayOutputStream();
                ImageIO.write(bufferedImage, "jpg", baos);

                imageBytes = baos.toByteArray();
            }
            if (message == JOptionPane.YES_OPTION) {
                String query = "INSERT INTO `cart`(`id`, `image`, `name`, `category`, `quantity`, `price`, `total`, `user_id`) VALUES(null, ?, ?, ?, ?, ?, ?, ?)";
                pst = con.prepareStatement(query);
                pst.setBytes(1, imageBytes);
                pst.setString(2, pName);
                pst.setString(3, cate);
                pst.setString(4, pQuant);
                pst.setString(5, pPrice);
                pst.setString(6, Total);
                pst.setInt(7, userId);


                int rowsAffected = pst.executeUpdate();

                if (rowsAffected > 0) {
                    JOptionPane.showMessageDialog(this, "Food Added to Cart");
                    food_name.setText("");
                    spin.setValue(0);
                    food_price.setText("");
                    food_img.setIcon(null);
                    total_label.setText("0.00");

                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(cart_panel, "There's an error while adding data to cart.", null, HEIGHT);
            e.printStackTrace();
        }
    }//GEN-LAST:event_foodAddtoCartBtnActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        Pages.setSelectedIndex(4);
        String user = userIDlabel.getText();
        retrieveCartDataForCurrentUser(user);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton27ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton27ActionPerformed
     Options.setSelectedIndex(1);
    }//GEN-LAST:event_jButton27ActionPerformed

    private void jButton29ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton29ActionPerformed
      Options.setSelectedIndex(0);
      
      
      String name = NameLabel.getText();
      String item = itemname.getText();
      String quantity = cart_quant.getText();
      String price = cart_price.getText();
      String total = cart_total.getText();
      String status = "Paid";
      String userID = userIDlabel.getText();
      getQuant = cart_model.getValueAt(cart_table.getSelectedRow(), 5).toString();
      getCate = category.getText();
      
    try {
    String query = "INSERT INTO transactions (name, item, quantity, price, total, status, user_id) VALUES (?, ?, ?, ?, ?, ?, ?)";

    // Show confirmation dialog
    int option = JOptionPane.showConfirmDialog(null, "Are you sure you want to proceed?", "Confirmation", JOptionPane.YES_NO_OPTION);
    if(getCate.equals("Food")){
                    try{
                        int cnvrt = Integer.parseInt(getQuant);
                        pst = con.prepareStatement("SELECT `Quantity` FROM `food`  WHERE `Name`=?");
                        pst.setString(1, item);
                        rs = pst.executeQuery();
                        while(rs.next()){
                        int quant = rs.getInt("Quantity");
                        
                                int tl = quant - cnvrt;
                            try{    
                        String updatequery = "UPDATE `food` SET `Quantity`=?  WHERE `Name`=?";
                        pst = con.prepareStatement(updatequery);
                        pst.setInt(1, tl);
                        pst.setString(2, item);
                        int rowaffected = pst.executeUpdate();
                        JOptionPane.showMessageDialog(PaymentOptions2, "OK");
                            }catch(Exception e){
                                e.printStackTrace();
                            }
                        }
                    }catch(Exception e){
                        e.printStackTrace();
                    }
                    }
                    if(getCate.equals("Drinks")){
                    try{
                        int cnvrt = Integer.parseInt(getQuant);
                        pst = con.prepareStatement("SELECT `Quantity` FROM `drinks`  WHERE `Name`=?");
                        pst.setString(1, item);
                        rs = pst.executeQuery();
                        while(rs.next()){
                        int quant = rs.getInt("Quantity");
                        
                                int tl = quant - cnvrt;
                            try{    
                        String updatequery = "UPDATE `drinks` SET `Quantity`=?  WHERE `Name`=?";
                        pst = con.prepareStatement(updatequery);
                        pst.setInt(1, tl);
                        pst.setString(2, item);
                        int rowaffected = pst.executeUpdate();
                        JOptionPane.showMessageDialog(PaymentOptions2, "OK");
                            }catch(Exception e){
                                e.printStackTrace();
                            }
                        }
                    }catch(Exception e){
                        e.printStackTrace();
                    }
                    }
                    if(getCate.equals("Snacks")){
                    try{
                        int cnvrt = Integer.parseInt(getQuant);
                        pst = con.prepareStatement("SELECT `Quantity` FROM `snack`  WHERE `Name`=?");
                        pst.setString(1, item);
                        rs = pst.executeQuery();
                        while(rs.next()){
                        int quant = rs.getInt("Quantity");
                        
                                int tl = quant - cnvrt;
                            try{    
                        String updatequery = "UPDATE `snack` SET `Quantity`=?  WHERE `Name`=?";
                        pst = con.prepareStatement(updatequery);
                        pst.setInt(1, tl);
                        pst.setString(2, item);
                        int rowaffected = pst.executeUpdate();
                        JOptionPane.showMessageDialog(PaymentOptions2, "OK");
                            }catch(Exception e){
                                e.printStackTrace();
                            }
                        }
                    }catch(Exception e){
                        e.printStackTrace();
                    }
                    }
    if (option == JOptionPane.YES_OPTION) {
        try (PreparedStatement pst = con.prepareStatement(query)) {
            // Set values for placeholders in the query
            pst.setString(1, name);
            pst.setString(2, item);
            pst.setString(3, quantity);
            pst.setString(4, price);
            pst.setString(5, total);
            pst.setString(6, status);
            pst.setString(7, userID);
            
            // Execute the query
            int rowsAffected = pst.executeUpdate();
            if (rowsAffected > 0) {
                // If successful, show a success message
                JOptionPane.showMessageDialog(null, "Transaction data inserted successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);
                idselectedindex = cart_model.getValueAt(cart_table.getSelectedRow(), 0).toString();
                    try{
                        PreparedStatement ppst = con.prepareStatement("DELETE FROM `cart` WHERE `id` = ?");
                        ppst.setString(1, idselectedindex);
                        int isAdded = ppst.executeUpdate();
                        if (isAdded == 1){
                            cart_table_view();
                        }else{
                        JOptionPane.showMessageDialog(rootPane, "There's an error!", "Error Message", HEIGHT);
                        }
            
                        }catch(Exception e){
                            JOptionPane.showMessageDialog(null, "Error while deleting", "Error in delete query", HEIGHT);
                            e.printStackTrace();
                        }
            } else {
                JOptionPane.showMessageDialog(null, "Transaction data not inserted.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    } else {
        JOptionPane.showMessageDialog(null, "Transaction canceled.", "Canceled", JOptionPane.WARNING_MESSAGE);
    }
} catch (SQLException e) {
    // Handle any SQL exceptions
    System.err.println("Error inserting transaction data: " + e.getMessage());
    e.printStackTrace();
    JOptionPane.showMessageDialog(null, "Error inserting transaction data: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
} catch (NumberFormatException e) {
    // Handle number format exception
    JOptionPane.showMessageDialog(null, "Invalid number format: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
}

    }//GEN-LAST:event_jButton29ActionPerformed

    private void jButton28ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton28ActionPerformed
       
       //credit cart code here
       
       String name = NameLabel.getText();
      String item = itemname.getText();
      String quantity = cart_quant.getText();
      String price = cart_price.getText();
      String total = cart_total.getText();
      String status = "Credit";
      String userID = userIDlabel.getText();
      String getCate = category.getText();
      getQuant = cart_model.getValueAt(cart_table.getSelectedRow(), 5).toString();
      
    try {
    String query = "INSERT INTO credits (name, item, quantity, price, total, status, user_id) VALUES (?, ?, ?, ?, ?, ?, ?)";

    // Show confirmation dialog
    int option = JOptionPane.showConfirmDialog(null, "Are you sure you want to proceed?", "Confirmation", JOptionPane.YES_NO_OPTION);
    if(getCate.equals("Food")){
                    try{
                        int cnvrt = Integer.parseInt(getQuant);
                        pst = con.prepareStatement("SELECT `Quantity` FROM `food`  WHERE `Name`=?");
                        pst.setString(1, item);
                        rs = pst.executeQuery();
                        while(rs.next()){
                        int quant = rs.getInt("Quantity");
                        
                                int tl = quant - cnvrt;
                            try{    
                        String updatequery = "UPDATE `food` SET `Quantity`=?  WHERE `Name`=?";
                        pst = con.prepareStatement(updatequery);
                        pst.setInt(1, tl);
                        pst.setString(2, item);
                        int rowaffected = pst.executeUpdate();
                        JOptionPane.showMessageDialog(PaymentOptions2, "OK");
                            }catch(Exception e){
                                e.printStackTrace();
                            }
                        }
                    }catch(Exception e){
                        e.printStackTrace();
                    }
                    }
                    if(getCate.equals("Drinks")){
                    try{
                        int cnvrt = Integer.parseInt(getQuant);
                        pst = con.prepareStatement("SELECT `Quantity` FROM `drinks`  WHERE `Name`=?");
                        pst.setString(1, item);
                        rs = pst.executeQuery();
                        while(rs.next()){
                        int quant = rs.getInt("Quantity");
                        
                                int tl = quant - cnvrt;
                            try{    
                        String updatequery = "UPDATE `drinks` SET `Quantity`=?  WHERE `Name`=?";
                        pst = con.prepareStatement(updatequery);
                        pst.setInt(1, tl);
                        pst.setString(2, item);
                        int rowaffected = pst.executeUpdate();
                        JOptionPane.showMessageDialog(PaymentOptions2, "OK");
                            }catch(Exception e){
                                e.printStackTrace();
                            }
                        }
                    }catch(Exception e){
                        e.printStackTrace();
                    }
                    }
                    if(getCate.equals("Snacks")){
                    try{
                        int cnvrt = Integer.parseInt(getQuant);
                        pst = con.prepareStatement("SELECT `Quantity` FROM `snack`  WHERE `Name`=?");
                        pst.setString(1, item);
                        rs = pst.executeQuery();
                        while(rs.next()){
                        int quant = rs.getInt("Quantity");
                        
                                int tl = quant - cnvrt;
                            try{    
                        String updatequery = "UPDATE `snack` SET `Quantity`=?  WHERE `Name`=?";
                        pst = con.prepareStatement(updatequery);
                        pst.setInt(1, tl);
                        pst.setString(2, item);
                        int rowaffected = pst.executeUpdate();
                        JOptionPane.showMessageDialog(PaymentOptions2, "OK");
                            }catch(Exception e){
                                e.printStackTrace();
                            }
                        }
                    }catch(Exception e){
                        e.printStackTrace();
                    }
                    }
    if (option == JOptionPane.YES_OPTION) {
        try (PreparedStatement pst = con.prepareStatement(query)) {
            // Set values for placeholders in the query
            pst.setString(1, name);
            pst.setString(2, item);
            pst.setString(3, quantity);
            pst.setString(4, price);
            pst.setString(5, total);
            pst.setString(6, status);
            pst.setString(7, userID);
            
            // Execute the query
            int rowsAffected = pst.executeUpdate();
            
            if (rowsAffected > 0) {
                
                // If successful, show a success message
                JOptionPane.showMessageDialog(null, "Credit successful.", "Success", JOptionPane.INFORMATION_MESSAGE);
                idselectedindex = cart_model.getValueAt(cart_table.getSelectedRow(), 0).toString();
                    try{
                        PreparedStatement ppst = con.prepareStatement("DELETE FROM `cart` WHERE `id` = ?");
                        ppst.setString(1, idselectedindex);
                        int isAdded = ppst.executeUpdate();
                        if (isAdded == 1){
                            cart_table_view();
                        }else{
                        JOptionPane.showMessageDialog(rootPane, "There's an error!", "Error Message", HEIGHT);
                        }
            
                        }catch(Exception e){
                            JOptionPane.showMessageDialog(null, "Error while deleting", "Error in delete query", HEIGHT);
                            e.printStackTrace();
                        }
                Options.setSelectedIndex(0);
            } else {
                JOptionPane.showMessageDialog(null, "Transaction data not inserted.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    } else {
        JOptionPane.showMessageDialog(null, "Transaction canceled.", "Canceled", JOptionPane.WARNING_MESSAGE);
    }
} catch (SQLException e) {
    // Handle any SQL exceptions
    System.err.println("Error inserting transaction data: " + e.getMessage());
    e.printStackTrace();
    JOptionPane.showMessageDialog(null, "Error inserting transaction data: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
} catch (NumberFormatException e) {
    // Handle number format exception
    JOptionPane.showMessageDialog(null, "Invalid number format: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
}
    
    
    }//GEN-LAST:event_jButton28ActionPerformed

    private void jButton33ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton33ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton33ActionPerformed

    private void jButton32ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton32ActionPerformed
     PaymentOptions2.setSelectedIndex(0);
    }//GEN-LAST:event_jButton32ActionPerformed

    private void jButton31ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton31ActionPerformed
      PaymentOptions2.setSelectedIndex(1);
    }//GEN-LAST:event_jButton31ActionPerformed

    private void jButton34ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton34ActionPerformed
        Pages.setSelectedIndex(7);
      String user = userIDlabel.getText();
      retrieveCartDataForReervation(user);
    }//GEN-LAST:event_jButton34ActionPerformed

    private void jButton35ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton35ActionPerformed
         Pages.setSelectedIndex(7);
            String user = userIDlabel.getText();
      retrieveCartDataForReervation(user);
    }//GEN-LAST:event_jButton35ActionPerformed
    
    private void jButton36ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton36ActionPerformed
        
        int message = JOptionPane.showConfirmDialog(rootPane, "Are you sure you want to Log out?", "Message", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE);
        if(message == JOptionPane.YES_OPTION){
           System.exit(0);
        }
    }//GEN-LAST:event_jButton36ActionPerformed

    private void reserveTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reserveTblMouseClicked
        idselectedindex = reserve_model.getValueAt(reserveTbl.getSelectedRow(), 0).toString();
        ritem.setText(reserve_model.getValueAt(reserveTbl.getSelectedRow(), 3).toString());
        rquant.setText(reserve_model.getValueAt(reserveTbl.getSelectedRow(), 5).toString());
        rname.setText(reserve_model.getValueAt(reserveTbl.getSelectedRow(), 2).toString());
        rprc.setText(reserve_model.getValueAt(reserveTbl.getSelectedRow(), 4).toString());
        rtotal.setText(reserve_model.getValueAt(reserveTbl.getSelectedRow(), 6).toString());
    }//GEN-LAST:event_reserveTblMouseClicked

    private void jButton37ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton37ActionPerformed
        // TODO add your handling code here:
        String getRName = rname.getText();
        String getRQuant = rquant.getText();
        String getRPrice = rprc.getText();
        String getItem = ritem.getText();
        String getTl = rtotal.getText();
        String status = "Paid";
        String userID = userIDlabel.getText();
         try {
    String query = "INSERT INTO transactions (name, item, quantity, price, total, status, user_id) VALUES (?, ?, ?, ?, ?, ?, ?)";

    // Show confirmation dialog
    int option = JOptionPane.showConfirmDialog(null, "Are you sure you want to proceed?", "Confirmation", JOptionPane.YES_NO_OPTION);
    
    if (option == JOptionPane.YES_OPTION) {
        try (PreparedStatement pst = con.prepareStatement(query)) {
            // Set values for placeholders in the query
            pst.setString(1, getRName);
            pst.setString(2, getItem);
            pst.setString(3, getRQuant);
            pst.setString(4, getRPrice);
            pst.setString(5, getTl);
            pst.setString(6, status);
            pst.setString(7, userID);
            
            // Execute the query
            int rowsAffected = pst.executeUpdate();
            if (rowsAffected > 0) {
                // If successful, show a success message
                JOptionPane.showMessageDialog(null, "Transaction data inserted successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);
                idselectedindex = reserve_model.getValueAt(reserveTbl.getSelectedRow(), 0).toString();
                    try{
                        PreparedStatement ppst = con.prepareStatement("DELETE FROM `reservation` WHERE `id` = ?");
                        ppst.setString(1, idselectedindex);
                        int isAdded = ppst.executeUpdate();
                        if (isAdded == 1){
                            reservation_view();
                        }else{
                        JOptionPane.showMessageDialog(rootPane, "There's an error!", "Error Message", HEIGHT);
                        }
            
                        }catch(Exception e){
                            JOptionPane.showMessageDialog(null, "Error while deleting", "Error in delete query", HEIGHT);
                            e.printStackTrace();
                        }
            } else {
                JOptionPane.showMessageDialog(null, "Transaction data not inserted.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    } else {
        JOptionPane.showMessageDialog(null, "Transaction canceled.", "Canceled", JOptionPane.WARNING_MESSAGE);
    }
} catch (SQLException e) {
    // Handle any SQL exceptions
    System.err.println("Error inserting transaction data: " + e.getMessage());
    e.printStackTrace();
    JOptionPane.showMessageDialog(null, "Error inserting transaction data: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
} catch (NumberFormatException e) {
    // Handle number format exception
    JOptionPane.showMessageDialog(null, "Invalid number format: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
}
    }//GEN-LAST:event_jButton37ActionPerformed

    private void drinksAddToCartBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drinksAddToCartBtnActionPerformed
        // Drink Add to Cart
      
        String dName = drinks_name.getText();
        Object getQuant = drinks_quant.getValue();
        String dQuant = getQuant.toString();
        int cnvrtQuant = (int) drinks_quant.getValue();
        String dPrice = drinks_price.getText();
        String Total = drink_total.getText();
        String userStringid = userIDlabel.getText();
        int userId = Integer.parseInt(userStringid);
        String category = drinksLabel.getText();

        if (cnvrtQuant < 1 || Total.equals("0.00")) {
            JOptionPane.showMessageDialog(null, "Total is empty! Please set a proper Quantity!", null, HEIGHT);
            return;
        }
        if (dName.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please select a Product!", null, HEIGHT);
            return;
        }
        byte[] imageBytes = null;
        Icon icon = drinks_img.getIcon();
        int message = JOptionPane.showConfirmDialog(rootPane, "Are you sure you want to add this Product to Cart?", "Message", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE);
        try {
            if (icon instanceof ImageIcon) {
                ImageIcon imageIcon = (ImageIcon) icon;
                Image image = imageIcon.getImage();
                BufferedImage bufferedImage = new BufferedImage(image.getWidth(null), image.getHeight(null), BufferedImage.TYPE_INT_RGB);
                Graphics2D g2 = bufferedImage.createGraphics();
                g2.drawImage(image, 0, 0, null);
                g2.dispose();

                ByteArrayOutputStream baos = new ByteArrayOutputStream();
                ImageIO.write(bufferedImage, "jpg", baos);

                imageBytes = baos.toByteArray();
            }
            if (message == JOptionPane.YES_OPTION) {
                String query = "INSERT INTO `cart`(`id`, `image`, `name`, `category`, `quantity`, `price`, `total`, `user_id`) VALUES(null, ?, ?, ?, ?, ?, ?, ?)";
                pst = con.prepareStatement(query);
                pst.setBytes(1, imageBytes);
                pst.setString(2, dName);
                 pst.setString(3, category);
                pst.setString(4, dQuant);
                pst.setString(5, dPrice);
                pst.setString(6, Total);
                pst.setInt(7, userId);

                int rowsAffected = pst.executeUpdate();

                if (rowsAffected > 0) {
                    JOptionPane.showMessageDialog(this, "Drink Added to Cart");
                    drinks_name.setText("");
                    drinks_quant.setValue(0);
                    drinks_price.setText("");
                    drinks_img.setIcon(null);
                    drink_total.setText("0.00");
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(cart_panel, "There's an error while adding data to cart.", null, HEIGHT);
            e.printStackTrace();
        }
    }//GEN-LAST:event_drinksAddToCartBtnActionPerformed

    private void snacksAddToCartBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_snacksAddToCartBtnActionPerformed
        // Snack add to cart button
          String sName = snack_name.getText();
      Object getQuant = snack_quant.getValue();
      String sQuant = getQuant.toString();
      int cnvrtQuant = (int) snack_quant.getValue();
      String sPrice = snack_prc.getText();
      String Total = snack_total.getText();
      String userStringid = userIDlabel.getText();
      int userId = Integer.parseInt(userStringid);
      String category = snacksLabel.getText();

      if (cnvrtQuant < 1 || Total.equals("0.00")) {
          JOptionPane.showMessageDialog(null, "Total is empty! Please Set a proper Quantity!", null, HEIGHT);
          return;
      }
      if (sName.isEmpty()) {
          JOptionPane.showMessageDialog(null, "Please Select a Product!", null, HEIGHT);
          return;
      }
      byte[] imageBytes = null;
      Icon icon = snack_img.getIcon();
      int message = JOptionPane.showConfirmDialog(rootPane, "Are you sure you want to add this Product to Cart?", "Message", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE);
      try {
          if (icon instanceof ImageIcon) {
              ImageIcon imageIcon = (ImageIcon) icon;
              Image image = imageIcon.getImage();
              BufferedImage bufferedImage = new BufferedImage(image.getWidth(null), image.getHeight(null), BufferedImage.TYPE_INT_RGB);
              Graphics2D g2 = bufferedImage.createGraphics();
              g2.drawImage(image, 0, 0, null);
              g2.dispose();

              ByteArrayOutputStream baos = new ByteArrayOutputStream();
              ImageIO.write(bufferedImage, "jpg", baos);

              imageBytes = baos.toByteArray();
          }
          if (message == JOptionPane.YES_OPTION) {
              String query = "INSERT INTO `cart`(`id`, `image`, `name`, `category`, `quantity`, `price`, `total`, `user_id`) VALUES(null, ?, ?, ?, ?, ?, ?, ?)";
              pst = con.prepareStatement(query);
              pst.setBytes(1, imageBytes);
              pst.setString(2, sName);
               pst.setString(3, category);
              pst.setString(4, sQuant);
              pst.setString(5, sPrice);
              pst.setString(6, Total);
              pst.setInt(7, userId);

              int rowsAffected = pst.executeUpdate();

              if (rowsAffected > 0) {
                  JOptionPane.showMessageDialog(this, "Snack Added to Cart");
                  snack_name.setText("");
                  snack_quant.setValue(0);
                  snack_prc.setText("");
                  snack_img.setIcon(null);
                  snack_total.setText("0.00");
              }
          }
      } catch (Exception e) {
          JOptionPane.showMessageDialog(cart_panel, "There's an error while adding data to cart.", null, HEIGHT);
          e.printStackTrace();
      }
    }//GEN-LAST:event_snacksAddToCartBtnActionPerformed

    
    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
        String user = userIDlabel.getText();
        retrieveCartDataForCurrentUser(user);
        Pages.setSelectedIndex(4);
    }//GEN-LAST:event_jButton19ActionPerformed

    private void jButton38ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton38ActionPerformed
        // TODO add your handling code here:
        idselectedindex = reserve_model.getValueAt(reserveTbl.getSelectedRow(), 0).toString();
                    try{
                        pst = con.prepareStatement("DELETE FROM `reservation` WHERE `id` = ?");
                        pst.setString(1, idselectedindex);
                        int isAdded = pst.executeUpdate();
                        if (isAdded == 1){
                            reservation_view();
                        }else{
                        JOptionPane.showMessageDialog(rootPane, "There's an error!", "Error Message", HEIGHT);
                        }
            
                        }catch(Exception e){
                            JOptionPane.showMessageDialog(null, "Error while deleting", "Error in delete query", HEIGHT);
                            e.printStackTrace();
                        }
    }//GEN-LAST:event_jButton38ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
       Buttons.setSelectedIndex(2);
    }//GEN-LAST:event_jButton9ActionPerformed

     public void retrieveCartDataForReervation(String userID) {
    try {
        // SQL query with JOIN and WHERE to retrieve cart data based on user ID
        String query = "SELECT reservation.id, reservation.image, reservation.cust_name, reservation.name, reservation.quantity, reservation.price, reservation.total\n" +
                       "FROM reservation\n" +
                       "INNER JOIN account ON reservation.user_id = account.id\n" +
                       "WHERE reservation.user_id = ?";
        
        // Prepare the statement
        PreparedStatement pst = con.prepareStatement(query);
        pst.setString(1, userID); // Set the user ID parameter
        
        // Execute the query
        ResultSet rs = pst.executeQuery();
        
        // Clear existing data in the table model
        reserve_model.setRowCount(0);
        
        // Populate the model with retrieved data
        while (rs.next()) {
            int cartID = rs.getInt("id");
            byte[] imageBytes = rs.getBytes("image");
            String custName = rs.getString("cust_name");
            String name = rs.getString("name");
            int quantity = rs.getInt("quantity");
            double price = rs.getDouble("price");
            double total = rs.getDouble("total");
            
            // Create an ImageIcon from the image bytes
            ImageIcon imageIcon = new ImageIcon(imageBytes);
            
            // Add the retrieved data to the table model
            reserve_model.addRow(new Object[]{cartID, imageIcon, custName, name, price, quantity, total});
        }
        
        // Set the model to the cart table
        reserveTbl.setModel(reserve_model);
        
        // Close the statement and result set
        pst.close();
        rs.close();
        
    } catch (SQLException e) {
        // Handle any exceptions
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error retrieving cart data: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
}
    
    private void reservationSectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reservationSectionActionPerformed
        // TODO add your handling code here:
        Pages.setSelectedIndex(7);
         String user = userIDlabel.getText();
        retrieveCartDataForReervation(user);
    }//GEN-LAST:event_reservationSectionActionPerformed

    private void jButton42ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton42ActionPerformed
       
        int message = JOptionPane.showConfirmDialog(rootPane, "Are you sure you want to Log out?", "Message", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE);
        if(message == JOptionPane.YES_OPTION){
           System.exit(0);
        }
    }//GEN-LAST:event_jButton42ActionPerformed

    private void jButton43ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton43ActionPerformed
        
        int message = JOptionPane.showConfirmDialog(rootPane, "Are you sure you want to Log out?", "Message", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE);
        if(message == JOptionPane.YES_OPTION){
           System.exit(0);
        }
    }//GEN-LAST:event_jButton43ActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        
        getQuant = cart_model.getValueAt(cart_table.getSelectedRow(), 5).toString();
        String customer = NameLabel.getText();
        String getCrtName = itemname.getText();
        String getCrtQnt = cart_quant.getText();
        String getCrtPrice = cart_price.getText();
        String getCrtTotal = cart_total.getText();
        String getUserID = userIDlabel.getText();
        getCate = category.getText();
        
        byte[] imageBytes = null;
        Icon icon = cart_image.getIcon();
        int message = JOptionPane.showConfirmDialog(rootPane, "Are you sure you want to Reserve this order?", "Message", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE);
        try{
            if(icon instanceof ImageIcon) {
                    ImageIcon imageIcon = (ImageIcon) icon;
                    Image image = imageIcon.getImage();
                    BufferedImage bufferedImage = new BufferedImage(image.getWidth(null), image.getHeight(null), BufferedImage.TYPE_INT_RGB);
                    Graphics2D g2 = bufferedImage.createGraphics();
                    g2.drawImage(image, 0, 0, null);
                    g2.dispose();

                    ByteArrayOutputStream baos = new ByteArrayOutputStream();
                    ImageIO.write(bufferedImage, "jpg", baos); 

                    imageBytes = baos.toByteArray();
                }
            if(message == JOptionPane.YES_OPTION){
                pst = con.prepareStatement("INSERT INTO `reservation`(`image`, `cust_name`, `name`, `price`, `quantity`, `total`, `user_id`) VALUES(?, ?, ?, ?, ?, ?, ?)");
                pst.setBytes(1, imageBytes);
                pst.setString(2, customer);
                pst.setString(3, getCrtName);
                pst.setString(4, getCrtPrice);
                pst.setString(5, getCrtQnt);
                pst.setString(6, getCrtTotal);
                pst.setString(7, getUserID);
                
                int rowsaffected = pst.executeUpdate();
                if(rowsaffected == 1){
                    if(getCate.equals("Food")){
                    try{
                        int cnvrt = Integer.parseInt(getQuant);
                        pst = con.prepareStatement("SELECT `Quantity` FROM `food`  WHERE `Name`=?");
                        pst.setString(1, getCrtName);
                        rs = pst.executeQuery();
                        while(rs.next()){
                        int quant = rs.getInt("Quantity");
                        
                                int total = quant - cnvrt;
                            try{    
                        String updatequery = "UPDATE `food` SET `Quantity`=?  WHERE `Name`=?";
                        pst = con.prepareStatement(updatequery);
                        pst.setInt(1, total);
                        pst.setString(2, getCrtName);
                        int rowaffected = pst.executeUpdate();
                        JOptionPane.showMessageDialog(PaymentOptions2, "OK");
                            }catch(Exception e){
                                e.printStackTrace();
                            }
                        }
                    }catch(Exception e){
                        e.printStackTrace();
                    }
                    }
                    if(getCate.equals("Drinks")){
                    try{
                        int cnvrt = Integer.parseInt(getQuant);
                        pst = con.prepareStatement("SELECT `Quantity` FROM `drinks`  WHERE `Name`=?");
                        pst.setString(1, getCrtName);
                        rs = pst.executeQuery();
                        while(rs.next()){
                        int quant = rs.getInt("Quantity");
                        
                                int total = quant - cnvrt;
                            try{    
                        String updatequery = "UPDATE `drinks` SET `Quantity`=?  WHERE `Name`=?";
                        pst = con.prepareStatement(updatequery);
                        pst.setInt(1, total);
                        pst.setString(2, getCrtName);
                        int rowaffected = pst.executeUpdate();
                        JOptionPane.showMessageDialog(PaymentOptions2, "OK");
                            }catch(Exception e){
                                e.printStackTrace();
                            }
                        }
                    }catch(Exception e){
                        e.printStackTrace();
                    }
                    }
                    if(getCate.equals("Snacks")){
                    try{
                        int cnvrt = Integer.parseInt(getQuant);
                        pst = con.prepareStatement("SELECT `Quantity` FROM `snack`  WHERE `Name`=?");
                        pst.setString(1, getCrtName);
                        rs = pst.executeQuery();
                        while(rs.next()){
                        int quant = rs.getInt("Quantity");
                        
                                int total = quant - cnvrt;
                            try{    
                        String updatequery = "UPDATE `snack` SET `Quantity`=?  WHERE `Name`=?";
                        pst = con.prepareStatement(updatequery);
                        pst.setInt(1, total);
                        pst.setString(2, getCrtName);
                        int rowaffected = pst.executeUpdate();
                        JOptionPane.showMessageDialog(PaymentOptions2, "OK");
                            }catch(Exception e){
                                e.printStackTrace();
                            }
                        }
                    }catch(Exception e){
                        e.printStackTrace();
                    }
                    }
                    idselectedindex = cart_model.getValueAt(cart_table.getSelectedRow(), 0).toString();
                    try{
                        pst = con.prepareStatement("DELETE FROM `cart` WHERE `id` = ?");
                        pst.setString(1, idselectedindex);
                        int isAdded = pst.executeUpdate();
                        if (isAdded == 1){
                            cart_table_view();
                        }else{
                        JOptionPane.showMessageDialog(rootPane, "There's an error!", "Error Message", HEIGHT);
                        }
            
                        }catch(Exception e){
                            JOptionPane.showMessageDialog(null, "Error while deleting", "Error in delete query", HEIGHT);
                            e.printStackTrace();
                        }
                        
                    JOptionPane.showMessageDialog(Options, "Product added to Reservation");
                    cart_image.setIcon(null);
                    itemname.setText("");
                    cart_price.setText("0.00");
                    cart_quant.setText("");
                    cart_total.setText("0.00");
                }
            }
        }catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton18ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        idselectedindex = cart_model.getValueAt(cart_table.getSelectedRow(), 0).toString();
                    try{
                        pst = con.prepareStatement("DELETE FROM `cart` WHERE `id` = ?");
                        pst.setString(1, idselectedindex);
                        int isAdded = pst.executeUpdate();
                        if (isAdded == 1){
                            cart_table_view();
                        }else{
                        JOptionPane.showMessageDialog(rootPane, "There's an error!", "Error Message", HEIGHT);
                        }
            
                        }catch(Exception e){
                            JOptionPane.showMessageDialog(null, "Error while deleting", "Error in delete query", HEIGHT);
                            e.printStackTrace();
                        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClientForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClientForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClientForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClientForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClientForm(null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane Buttons;
    private javax.swing.JPanel Credits_panel;
    private javax.swing.JPanel Drinks_panel;
    private javax.swing.JPanel Home_panel;
    private javax.swing.JPanel MainPanel;
    private javax.swing.JLabel NameLabel;
    private javax.swing.JPanel One;
    private javax.swing.JTabbedPane Options;
    private javax.swing.JTabbedPane Pages;
    private javax.swing.JTabbedPane PaymentOptions2;
    private javax.swing.JPanel Reservations_panel;
    private javax.swing.JPanel Transaction_Panel;
    private javax.swing.JPanel YellowBG;
    private javax.swing.JPanel YellowBackground;
    private javax.swing.JLabel cart_image;
    private javax.swing.JPanel cart_panel;
    private javax.swing.JLabel cart_price;
    private javax.swing.JLabel cart_quant;
    private javax.swing.JTable cart_table;
    private javax.swing.JLabel cart_total;
    private javax.swing.JLabel category;
    private javax.swing.JTable creditsTable;
    private javax.swing.JLabel drink_total;
    private javax.swing.JButton drinksAddToCartBtn;
    private javax.swing.JLabel drinksLabel;
    private javax.swing.JLabel drinksLabel1;
    private javax.swing.JLabel drinksLabel2;
    private javax.swing.JLabel drinksLabel3;
    private javax.swing.JLabel drinksLabel4;
    private javax.swing.JLabel drinksLabel5;
    private javax.swing.JLabel drinksLabel6;
    private javax.swing.JLabel drinksLabel7;
    private javax.swing.JLabel drinks_img;
    private javax.swing.JLabel drinks_name;
    private javax.swing.JLabel drinks_price;
    private javax.swing.JSpinner drinks_quant;
    private javax.swing.JTable drinks_table;
    private javax.swing.JButton foodAddtoCartBtn;
    private javax.swing.JLabel food_img;
    private javax.swing.JLabel food_name;
    private javax.swing.JPanel food_panel;
    private javax.swing.JLabel food_price;
    private javax.swing.JTable food_table;
    private javax.swing.JLabel itemname;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton24;
    private javax.swing.JButton jButton25;
    private javax.swing.JButton jButton26;
    private javax.swing.JButton jButton27;
    private javax.swing.JButton jButton28;
    private javax.swing.JButton jButton29;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton31;
    private javax.swing.JButton jButton32;
    private javax.swing.JButton jButton33;
    private javax.swing.JButton jButton34;
    private javax.swing.JButton jButton35;
    private javax.swing.JButton jButton36;
    private javax.swing.JButton jButton37;
    private javax.swing.JButton jButton38;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton41;
    private javax.swing.JButton jButton42;
    private javax.swing.JButton jButton43;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel74;
    private javax.swing.JLabel jLabel75;
    private javax.swing.JLabel jLabel77;
    private javax.swing.JLabel jLabel78;
    private javax.swing.JLabel jLabel79;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel90;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel28;
    private javax.swing.JPanel jPanel29;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel33;
    private javax.swing.JPanel jPanel34;
    private javax.swing.JPanel jPanel35;
    private javax.swing.JPanel jPanel36;
    private javax.swing.JPanel jPanel37;
    private javax.swing.JPanel jPanel38;
    private javax.swing.JPanel jPanel39;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel40;
    private javax.swing.JPanel jPanel41;
    private javax.swing.JPanel jPanel42;
    private javax.swing.JPanel jPanel43;
    private javax.swing.JPanel jPanel44;
    private javax.swing.JPanel jPanel45;
    private javax.swing.JPanel jPanel46;
    private javax.swing.JPanel jPanel47;
    private javax.swing.JPanel jPanel48;
    private javax.swing.JPanel jPanel49;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel52;
    private javax.swing.JPanel jPanel53;
    private javax.swing.JPanel jPanel57;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton reservationSection;
    private javax.swing.JTable reserveTbl;
    private javax.swing.JLabel ritem;
    private javax.swing.JLabel rname;
    private javax.swing.JLabel rprc;
    private javax.swing.JLabel rquant;
    private javax.swing.JLabel rtotal;
    private javax.swing.JLabel snack_img;
    private javax.swing.JLabel snack_name;
    private javax.swing.JPanel snack_panel;
    private javax.swing.JLabel snack_prc;
    private javax.swing.JSpinner snack_quant;
    private javax.swing.JLabel snack_total;
    private javax.swing.JButton snacksAddToCartBtn;
    private javax.swing.JLabel snacksLabel;
    private javax.swing.JTable snacks_table;
    private javax.swing.JSpinner spin;
    private javax.swing.JLabel total_label;
    private javax.swing.JTable transacTable;
    private javax.swing.JLabel userIDlabel;
    // End of variables declaration//GEN-END:variables
}
